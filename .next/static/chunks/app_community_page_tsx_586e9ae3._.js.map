{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Craig/Desktop/WEB%20DEV/final%20project/deployment/lokalista/app/community/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\n// Clone of journey page but with /community redirects\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { createClient } from \"@/lib/supabase/browserClient\";\r\n\r\ntype Profile = {\r\n  id: string;\r\n  first_name?: string | null;\r\n  last_name?: string | null;\r\n};\r\n\r\ntype Post = {\r\n  id: string;\r\n  user_id: string;\r\n  content: string;\r\n  created_at: string;\r\n  profiles?: Profile | null;\r\n  likes_count?: number;\r\n  comments_count?: number;\r\n  liked_by_me?: boolean;\r\n  image_url?: string | null;\r\n};\r\n\r\ntype Comment = {\r\n  id: string;\r\n  post_id: string;\r\n  user_id: string;\r\n  content: string;\r\n  created_at: string;\r\n  profiles?: Profile | null;\r\n};\r\n\r\nexport default function CommunityPage() {\r\n  const supabase = useMemo(() => createClient(), []);\r\n  const [userId, setUserId] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [content, setContent] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [expandedPostIds, setExpandedPostIds] = useState<Set<string>>(new Set());\r\n  const [commentsByPost, setCommentsByPost] = useState<Record<string, Comment[]>>({});\r\n  const [newCommentContent, setNewCommentContent] = useState<Record<string, string>>({});\r\n  const [imageFile, setImageFile] = useState<File | null>(null);\r\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      const { data } = await supabase.auth.getUser();\r\n      if (!mounted) return;\r\n      const uid = data.user?.id ?? null;\r\n      setUserId(uid);\r\n      await loadPosts(uid);\r\n      setLoading(false);\r\n    })();\r\n    const { data: sub } = supabase.auth.onAuthStateChange(async (_e, session) => {\r\n      const uid = session?.user?.id ?? null;\r\n      setUserId(uid);\r\n      await loadPosts(uid);\r\n    });\r\n    return () => {\r\n      mounted = false;\r\n      sub.subscription.unsubscribe();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  async function loadPosts(currentUserId: string | null = userId) {\r\n    const { data, error } = await supabase\r\n      .from(\"posts\")\r\n      .select(\r\n        `id, user_id, content, image_url, created_at, profiles:profiles!posts_user_id_fkey(id, first_name, last_name),\r\n         likes_count:likes(count), comments_count:comments(count)`\r\n      )\r\n      .order(\"created_at\", { ascending: false });\r\n\r\n    if (error) {\r\n      console.error(error);\r\n      return;\r\n    }\r\n\r\n    const normalized = (data as any[]).map((row) => ({\r\n      ...row,\r\n      likes_count: Array.isArray(row.likes_count) ? row.likes_count[0]?.count ?? 0 : row.likes_count ?? 0,\r\n      comments_count: Array.isArray(row.comments_count) ? row.comments_count[0]?.count ?? 0 : row.comments_count ?? 0,\r\n      liked_by_me: false,\r\n    })) as Post[];\r\n\r\n    if (currentUserId && normalized.length) {\r\n      const postIds = normalized.map((p) => p.id);\r\n      const { data: myLikes, error: likesErr } = await supabase\r\n        .from(\"likes\")\r\n        .select(\"post_id\")\r\n        .eq(\"user_id\", currentUserId)\r\n        .in(\"post_id\", postIds);\r\n      if (!likesErr && myLikes) {\r\n        const likedSet = new Set(myLikes.map((l: any) => l.post_id));\r\n        for (const p of normalized) p.liked_by_me = likedSet.has(p.id);\r\n      }\r\n    }\r\n\r\n    setPosts(normalized);\r\n  }\r\n\r\n  async function submitPost(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      window.location.href = \"/auth/login?next=/community\";\r\n      return;\r\n    }\r\n    if (!content.trim()) return;\r\n    setSubmitting(true);\r\n    let imageUrl: string | null = null;\r\n    try {\r\n      if (imageFile) {\r\n        const ext = imageFile.name.split(\".\").pop()?.toLowerCase() || \"jpg\";\r\n        const path = `${userId}/${Date.now()}-${Math.random().toString(36).slice(2)}.${ext}`;\r\n        const { error: upErr } = await supabase.storage.from(\"post-images\").upload(path, imageFile, {\r\n          cacheControl: \"3600\",\r\n          upsert: false,\r\n          contentType: imageFile.type || \"image/jpeg\",\r\n        });\r\n        if (upErr) throw upErr;\r\n        const { data: pub } = supabase.storage.from(\"post-images\").getPublicUrl(path);\r\n        imageUrl = pub.publicUrl;\r\n      }\r\n      const { error } = await supabase.from(\"posts\").insert({ content, image_url: imageUrl });\r\n      if (error) throw error;\r\n      setContent(\"\");\r\n      setImageFile(null);\r\n      setImagePreview(null);\r\n      await loadPosts();\r\n    } catch (err: any) {\r\n      alert(err?.message || \"Failed to post.\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  async function toggleLike(post: Post) {\r\n    if (!userId) {\r\n      window.location.href = \"/auth/login?next=/community\";\r\n      return;\r\n    }\r\n    if (post.liked_by_me) {\r\n      const { error } = await supabase.from(\"likes\").delete().match({ post_id: post.id, user_id: userId });\r\n      if (error) return alert(error.message);\r\n    } else {\r\n      // Upsert to avoid duplicate key conflicts on refresh/race conditions\r\n      const { error } = await supabase\r\n        .from(\"likes\")\r\n        .upsert({ post_id: post.id, user_id: userId }, { onConflict: \"post_id,user_id\" });\r\n      if (error) return alert(error.message);\r\n    }\r\n    await loadPosts(userId);\r\n  }\r\n\r\n  async function loadComments(postId: string) {\r\n    const { data, error } = await supabase\r\n      .from(\"comments\")\r\n      .select(\"id, post_id, user_id, content, created_at, profiles:profiles!comments_user_id_fkey(id, first_name, last_name)\")\r\n      .eq(\"post_id\", postId)\r\n      .order(\"created_at\", { ascending: true });\r\n    if (error) return alert(error.message);\r\n    setCommentsByPost((prev) => ({ ...prev, [postId]: (data as Comment[]) || [] }));\r\n  }\r\n\r\n  async function submitComment(postId: string) {\r\n    if (!userId) {\r\n      window.location.href = \"/auth/login?next=/community\";\r\n      return;\r\n    }\r\n    const text = (newCommentContent[postId] || \"\").trim();\r\n    if (!text) return;\r\n    const { error } = await supabase.from(\"comments\").insert({ post_id: postId, content: text, user_id: userId });\r\n    if (error) return alert(error.message);\r\n    setNewCommentContent((p) => ({ ...p, [postId]: \"\" }));\r\n    await loadComments(postId);\r\n    await loadPosts();\r\n  }\r\n\r\n  function toggleExpanded(postId: string) {\r\n    setExpandedPostIds((prev) => {\r\n      const next = new Set(prev);\r\n      if (next.has(postId)) next.delete(postId);\r\n      else next.add(postId);\r\n      return next;\r\n    });\r\n    if (!commentsByPost[postId]) void loadComments(postId);\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      <div className=\"container max-w-2xl py-6\">\r\n        <h1 className=\"text-2xl font-semibold mb-4\">Community</h1>\r\n\r\n        {/* Composer */}\r\n        <form onSubmit={submitPost} className=\"bg-white border border-gray-200 rounded-xl p-4 mb-6\">\r\n          <textarea\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            placeholder={userId ? \"Share something with the community...\" : \"Sign in to post\"}\r\n            className=\"w-full resize-none outline-none min-h-[90px]\"\r\n            disabled={!userId || submitting}\r\n          />\r\n          {imagePreview && (\r\n            <div className=\"mt-3\">\r\n              <img src={imagePreview} alt=\"Selected\" className=\"max-h-64 rounded-lg border\" />\r\n            </div>\r\n          )}\r\n          <div className=\"flex items-center justify-between mt-3\">\r\n            <span className=\"text-sm text-gray-500\">{content.length}/280</span>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!userId || submitting || !content.trim() || content.length > 280}\r\n              className=\"px-4 h-9 rounded-full bg-[#8c52ff] text-white disabled:opacity-50\"\r\n            >\r\n              {submitting ? \"Posting...\" : \"Post\"}\r\n            </button>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <label className=\"inline-flex items-center gap-2 text-sm text-gray-700 cursor-pointer\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                className=\"hidden\"\r\n                disabled={!userId || submitting}\r\n                onChange={(e) => {\r\n                  const file = e.target.files?.[0] || null;\r\n                  setImageFile(file);\r\n                  setImagePreview(file ? URL.createObjectURL(file) : null);\r\n                }}\r\n              />\r\n              <span className=\"px-3 h-9 inline-flex items-center rounded-md border border-gray-300 hover:bg-gray-50\">Add image</span>\r\n              {imageFile && <span className=\"text-gray-500\">{imageFile.name}</span>}\r\n            </label>\r\n          </div>\r\n        </form>\r\n\r\n        {/* Feed */}\r\n        {loading ? (\r\n          <div className=\"text-center text-gray-500\">Loadingâ€¦</div>\r\n        ) : posts.length === 0 ? (\r\n          <div className=\"text-center text-gray-500\">No posts yet. Be the first!</div>\r\n        ) : (\r\n          <ul className=\"space-y-3\">\r\n            {posts.map((post) => (\r\n              <li key={post.id} className=\"bg-white border border-gray-200 rounded-xl p-4\">\r\n                <div className=\"flex items-start gap-3\">\r\n                  <div className=\"w-9 h-9 rounded-full bg-gray-100 flex items-center justify-center text-sm font-medium\">\r\n                    {(((post.profiles?.first_name || \"\") + (post.profiles?.last_name ? ` ${post.profiles.last_name}` : \"\")) || post.user_id || \"?\").slice(0, 1).toUpperCase()}\r\n                  </div>\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                      <span className=\"font-medium text-gray-900\">{(post.profiles?.first_name || \"\").toString() + (post.profiles?.last_name ? ` ${post.profiles.last_name}` : \"\") || \"Anonymous\"}</span>\r\n                      <span>Â·</span>\r\n                      <time dateTime={post.created_at}>{new Date(post.created_at).toLocaleString()}</time>\r\n                    </div>\r\n                    <p className=\"mt-2 whitespace-pre-wrap break-words\">{post.content}</p>\r\n                    {post.image_url && (\r\n                      <div className=\"mt-3\">\r\n                        <img src={post.image_url} alt=\"Post image\" className=\"rounded-lg border max-h-96\" />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"mt-3 flex items-center gap-4 text-sm text-gray-600\">\r\n                      <button onClick={() => toggleLike(post)} className={`inline-flex items-center gap-1 ${post.liked_by_me ? \"text-fuchsia-600\" : \"hover:text-gray-900\"}`}>\r\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden>\r\n                          <path d=\"M12 21s-7-4.5-7-10a7 7 0 0114 0c0 5.5-7 10-7 10z\" stroke=\"currentColor\" strokeWidth=\"1.6\"/>\r\n                        </svg>\r\n                        <span>{post.likes_count ?? 0}</span>\r\n                      </button>\r\n                      <button onClick={() => toggleExpanded(post.id)} className=\"inline-flex items-center gap-1 hover:text-gray-900\">\r\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden>\r\n                          <path d=\"M21 15a2 2 0 01-2 2H8l-4 4V5a2 2 0 012-2h13a2 2 0 012 2v10z\" stroke=\"currentColor\" strokeWidth=\"1.6\"/>\r\n                        </svg>\r\n                        <span>{post.comments_count ?? 0}</span>\r\n                      </button>\r\n                    </div>\r\n\r\n                    {expandedPostIds.has(post.id) && (\r\n                      <div className=\"mt-3 border-t border-gray-200 pt-3\">\r\n                        <div className=\"space-y-3\">\r\n                          {(commentsByPost[post.id] || []).map((c) => (\r\n                            <div key={c.id} className=\"flex items-start gap-3\">\r\n                              <div className=\"w-8 h-8 rounded-full bg-gray-100 flex items-center justify-center text-xs font-medium\">\r\n                                {(((c.profiles?.first_name || \"\") + (c.profiles?.last_name ? ` ${c.profiles.last_name}` : \"\")) || c.user_id || \"?\").slice(0, 1).toUpperCase()}\r\n                              </div>\r\n                              <div className=\"flex-1\">\r\n                                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                                  <span className=\"font-medium text-gray-900\">{(c.profiles?.first_name || \"\") + (c.profiles?.last_name ? ` ${c.profiles.last_name}` : \"\") || \"Anonymous\"}</span>\r\n                                  <span>Â·</span>\r\n                                  <time dateTime={c.created_at}>{new Date(c.created_at).toLocaleString()}</time>\r\n                                </div>\r\n                                <p className=\"mt-1 whitespace-pre-wrap break-words text-sm\">{c.content}</p>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n\r\n                        <div className=\"mt-3 flex items-center gap-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder={userId ? \"Write a commentâ€¦\" : \"Sign in to comment\"}\r\n                            value={newCommentContent[post.id] || \"\"}\r\n                            onChange={(e) => setNewCommentContent((p) => ({ ...p, [post.id]: e.target.value }))}\r\n                            className=\"flex-1 h-9 px-3 rounded-md border border-gray-300\"\r\n                            disabled={!userId}\r\n                          />\r\n                          <button onClick={() => submitComment(post.id)} disabled={!userId || !(newCommentContent[post.id] || \"\").trim()} className=\"px-3 h-9 rounded-md bg-gray-900 text-white disabled:opacity-50\">Post</button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}