{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Andre/Documents/GitHub/lokalista/app/ui/Modal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\ntype ModalProps = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title?: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport default function Modal({ open, onClose, title, children }: ModalProps) {\r\n  useEffect(() => {\r\n    function onKey(e: KeyboardEvent) {\r\n      if (e.key === \"Escape\") onClose();\r\n    }\r\n    if (open) {\r\n      document.addEventListener(\"keydown\", onKey);\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKey);\r\n      document.body.style.overflow = \"\";\r\n    };\r\n  }, [open, onClose]);\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n      <div className=\"absolute inset-0 bg-black/30\" onClick={onClose} />\r\n      <div role=\"dialog\" aria-modal=\"true\" className=\"relative z-10 w-full max-w-md rounded-lg border border-border/60 bg-background p-5 shadow-xl\">\r\n        {title && <div className=\"h2 mb-2\">{title}</div>}\r\n        {children}\r\n        <div className=\"mt-4 flex justify-end\">\r\n          <button onClick={onClose} className=\"h-9 px-4 rounded-md border border-border/60\">Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAWe,SAAS,MAAM,KAA8C;QAA9C,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAc,GAA9C;;IAC5B,IAAA,0KAAS;2BAAC;YACR,SAAS,MAAM,CAAgB;gBAC7B,IAAI,EAAE,GAAG,KAAK,UAAU;YAC1B;YACA,IAAI,MAAM;gBACR,SAAS,gBAAgB,CAAC,WAAW;gBACrC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;YACjC;YACA;mCAAO;oBACL,SAAS,mBAAmB,CAAC,WAAW;oBACxC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;gBACjC;;QACF;0BAAG;QAAC;QAAM;KAAQ;IAElB,IAAI,CAAC,MAAM,OAAO;IAElB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;gBAA+B,SAAS;;;;;;0BACvD,6LAAC;gBAAI,MAAK;gBAAS,cAAW;gBAAO,WAAU;;oBAC5C,uBAAS,6LAAC;wBAAI,WAAU;kCAAW;;;;;;oBACnC;kCACD,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAO,SAAS;4BAAS,WAAU;sCAA8C;;;;;;;;;;;;;;;;;;;;;;;AAK5F;GA7BwB;KAAA","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Andre/Documents/GitHub/lokalista/app/ui/MoodLocationCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst defaultMoods = [\r\n  \"Cozy\",\r\n  \"Adventurous\",\r\n  \"Chill\",\r\n  \"Romantic\",\r\n  \"Lively\",\r\n  \"Productive\",\r\n];\r\n\r\nexport default function MoodLocationCard() {\r\n  const [selectedMoods, setSelectedMoods] = useState<string[]>([]);\r\n  const [location, setLocation] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  function toggleMood(mood: string) {\r\n    setSelectedMoods((prev) =>\r\n      prev.includes(mood) ? prev.filter((m) => m !== mood) : [...prev, mood]\r\n    );\r\n  }\r\n\r\n  function useMockGps() {\r\n    setLocation(\"Current location\");\r\n  }\r\n\r\n  function onSubmit() {\r\n    if (selectedMoods.length === 0) {\r\n      setError(\"Select at least one mood.\");\r\n      return;\r\n    }\r\n    if (!location.trim()) {\r\n      setError(\"Enter a location or use GPS.\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"rounded-xl border border-border/60 bg-muted p-4 md:p-6\">\r\n      <div className=\"mb-4\">\r\n        <div className=\"text-sm font-medium mb-2\">What’s your mood?</div>\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          {defaultMoods.map((chip) => {\r\n            const isActive = selectedMoods.includes(chip);\r\n            return (\r\n              <button\r\n                key={chip}\r\n                type=\"button\"\r\n                onClick={() => toggleMood(chip)}\r\n                className={`px-3 h-9 rounded-full border text-sm transition-colors ${\r\n                  isActive\r\n                    ? \"bg-brand text-white border-brand hover:bg-brand-600\"\r\n                    : \"border-border/60 bg-background hover:bg-muted/60\"\r\n                }`}\r\n              >\r\n                {chip}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <div className=\"text-sm font-medium mb-2\">Your location</div>\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            placeholder=\"Downtown, Brooklyn…\"\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            className=\"flex-1 h-10 px-3 rounded-md border border-border/60 bg-background outline-none focus:ring-2 focus:ring-brand/40\"\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            onClick={useMockGps}\r\n            className=\"h-10 px-3 rounded-md border border-border/60\"\r\n          >\r\n            Use my GPS\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {error && <div className=\"text-red-600 text-sm mb-3\">{error}</div>}\r\n      <button onClick={onSubmit} className=\"w-full h-11 rounded-md bg-brand text-white hover:bg-brand-600 transition-colors\">\r\n        Get recommendations\r\n      </button>\r\n\r\n      {selectedMoods.length > 0 && (\r\n        <div className=\"mt-3 text-xs text-muted\">\r\n          Selected: {selectedMoods.join(\", \")}\r\n        </div>\r\n      )}\r\n\r\n      <Modal open={open} onClose={() => setOpen(false)} title=\"Sign in required\">\r\n        <p className=\"text-muted\">To see personalized recommendations and save them, please sign in or create an account.</p>\r\n        <div className=\"mt-4 flex gap-2\">\r\n          <a href=\"/auth/login\" className=\"h-9 px-4 rounded-md border border-border/60 inline-flex items-center justify-center\">Sign in</a>\r\n          <a href=\"/auth/signup\" className=\"h-9 px-4 rounded-md bg-brand text-white inline-flex items-center justify-center hover:bg-brand-600\">Create account</a>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,eAAe;IACnB;IACA;IACA;IACA;IACA;IACA;CACD;AAEc,SAAS;;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,yKAAQ,EAAW,EAAE;IAC/D,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAC;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IAEnC,SAAS,WAAW,IAAY;QAC9B,iBAAiB,CAAC,OAChB,KAAK,QAAQ,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,IAAM,MAAM,QAAQ;mBAAI;gBAAM;aAAK;IAE1E;IAEA,SAAS;QACP,YAAY;IACd;IAEA,SAAS;QACP,IAAI,cAAc,MAAM,KAAK,GAAG;YAC9B,SAAS;YACT;QACF;QACA,IAAI,CAAC,SAAS,IAAI,IAAI;YACpB,SAAS;YACT;QACF;QACA,SAAS;QACT,QAAQ;IACV;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAA2B;;;;;;kCAC1C,6LAAC;wBAAI,WAAU;kCACZ,aAAa,GAAG,CAAC,CAAC;4BACjB,MAAM,WAAW,cAAc,QAAQ,CAAC;4BACxC,qBACE,6LAAC;gCAEC,MAAK;gCACL,SAAS,IAAM,WAAW;gCAC1B,WAAW,AAAC,0DAIX,OAHC,WACI,wDACA;0CAGL;+BATI;;;;;wBAYX;;;;;;;;;;;;0BAGJ,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAA2B;;;;;;kCAC1C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,WAAU;;;;;;0CAEZ,6LAAC;gCACC,MAAK;gCACL,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;YAKJ,uBAAS,6LAAC;gBAAI,WAAU;0BAA6B;;;;;;0BACtD,6LAAC;gBAAO,SAAS;gBAAU,WAAU;0BAAkF;;;;;;YAItH,cAAc,MAAM,GAAG,mBACtB,6LAAC;gBAAI,WAAU;;oBAA0B;oBAC5B,cAAc,IAAI,CAAC;;;;;;;0BAIlC,6LAAC,iIAAK;gBAAC,MAAM;gBAAM,SAAS,IAAM,QAAQ;gBAAQ,OAAM;;kCACtD,6LAAC;wBAAE,WAAU;kCAAa;;;;;;kCAC1B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,MAAK;gCAAc,WAAU;0CAAsF;;;;;;0CACtH,6LAAC;gCAAE,MAAK;gCAAe,WAAU;0CAAqG;;;;;;;;;;;;;;;;;;;;;;;;AAKhJ;GA3FwB;KAAA","debugId":null}}]
}