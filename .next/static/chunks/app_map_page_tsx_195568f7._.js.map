{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Craig/Desktop/WEB%20DEV/final%20project/deployment/lokalista/app/map/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useRef, useState, useMemo } from \"react\";\r\nimport { createClient } from \"@/lib/supabase/browserClient\";\r\n\r\ninterface FoodPlace {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  rating: number;\r\n  price_range: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  description: string;\r\n  image_url?: string;\r\n  cuisine_type?: string;\r\n  is_open?: boolean;\r\n}\r\n\r\nexport default function FoodMapPage() {\r\n  const mapEl = useRef<HTMLDivElement | null>(null);\r\n  const mapRef = useRef<any>(null);\r\n  const userMarkerRef = useRef<any>(null);\r\n  const foodMarkersRef = useRef<any[]>([]);\r\n  const initializingRef = useRef<boolean>(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [cuisineFilter, setCuisineFilter] = useState(\"\");\r\n  const [priceFilter, setPriceFilter] = useState(\"\");\r\n  const [loadingLoc, setLoadingLoc] = useState(false);\r\n  const [searching, setSearching] = useState(false);\r\n  const [suggestions, setSuggestions] = useState<Array<{ display: string; lat: number; lon: number }>>([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const debounceRef = useRef<any>(null);\r\n  const [foodPlaces, setFoodPlaces] = useState<FoodPlace[]>([]);\r\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n  const [userLocation, setUserLocation] = useState<[number, number] | null>(null);\r\n  const [selectedPlace, setSelectedPlace] = useState<FoodPlace | null>(null);\r\n\r\n  // Initialize Leaflet map with satellite view focused on food places\r\n  useEffect(() => {\r\n    const ensureAssets = async () => {\r\n      if (!document.querySelector('link[data-leaflet-css=\"true\"]')) {\r\n        const link = document.createElement(\"link\");\r\n        link.rel = \"stylesheet\";\r\n        link.href = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\";\r\n        link.setAttribute(\"data-leaflet-css\", \"true\");\r\n        document.head.appendChild(link);\r\n      }\r\n      if (!(window as any).L) {\r\n        await new Promise<void>((resolve) => {\r\n          const script = document.createElement(\"script\");\r\n          script.src = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\";\r\n          script.async = true;\r\n          script.onload = () => resolve();\r\n          document.body.appendChild(script);\r\n        });\r\n      }\r\n    };\r\n\r\n    const init = async () => {\r\n      if (initializingRef.current || mapRef.current) return;\r\n      initializingRef.current = true;\r\n      await ensureAssets();\r\n      const L = (window as any).L;\r\n      if (!mapEl.current) return;\r\n\r\n      // Default to Cebu City center (similar to your reference image)\r\n      const defaultCenter: [number, number] = [10.3157, 123.8854];\r\n      mapRef.current = L.map(mapEl.current, {\r\n        center: defaultCenter,\r\n        zoom: 14,\r\n        zoomControl: true,\r\n        zoomControlOptions: {\r\n          position: 'topleft'\r\n        },\r\n        // Modern map settings for better performance\r\n        preferCanvas: true,\r\n        zoomSnap: 0.25,\r\n        zoomDelta: 0.5,\r\n        wheelPxPerZoomLevel: 120,\r\n        // Enable smooth zooming\r\n        zoomAnimation: true,\r\n        fadeAnimation: true,\r\n        markerZoomAnimation: true,\r\n        // Modern attribution control\r\n        attributionControl: true,\r\n        attributionControlOptions: {\r\n          position: 'bottomright'\r\n        }\r\n      });\r\n\r\n      // Modern high-resolution satellite imagery with latest data\r\n      L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\r\n        maxZoom: 22,\r\n        attribution: '&copy; Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\r\n        subdomains: ['server', 'services'],\r\n      }).addTo(mapRef.current);\r\n\r\n      // Latest street overlay with high detail\r\n      L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\", {\r\n        maxZoom: 22,\r\n        attribution: '&copy; Esri',\r\n        opacity: 0.7,\r\n        subdomains: ['server', 'services'],\r\n      }).addTo(mapRef.current);\r\n\r\n      // Add modern OpenStreetMap layer as alternative (latest data)\r\n      const osmLayer = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n        maxZoom: 19,\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n        subdomains: ['a', 'b', 'c'],\r\n      });\r\n\r\n      // Add layer control for switching between map types\r\n      const baseMaps = {\r\n        \"Satellite\": L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\r\n          maxZoom: 22,\r\n          attribution: '&copy; Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\r\n          subdomains: ['server', 'services'],\r\n        }),\r\n        \"Street Map\": L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n          maxZoom: 19,\r\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n          subdomains: ['a', 'b', 'c'],\r\n        }),\r\n        \"Hybrid\": L.layerGroup([\r\n          L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\r\n            maxZoom: 22,\r\n            attribution: '&copy; Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\r\n            subdomains: ['server', 'services'],\r\n          }),\r\n          L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\", {\r\n            maxZoom: 22,\r\n            attribution: '&copy; Esri',\r\n            opacity: 0.7,\r\n            subdomains: ['server', 'services'],\r\n          })\r\n        ])\r\n      };\r\n\r\n      // Add layer control to map\r\n      L.control.layers(baseMaps, {}, {\r\n        position: 'topright',\r\n        collapsed: true\r\n      }).addTo(mapRef.current);\r\n\r\n      // Ask for geolocation and center\r\n      locateUser();\r\n\r\n      // Click to show coordinates (but don't search automatically to prevent markers from moving)\r\n      mapRef.current.on(\"click\", (e: any) => {\r\n        const latlng = e.latlng;\r\n        console.log('Map clicked at:', [latlng.lat, latlng.lng]);\r\n        // Don't automatically search on click to prevent markers from moving\r\n      });\r\n\r\n      // Load initial food places around default center\r\n      setTimeout(() => {\r\n        searchFoodPlaces(defaultCenter);\r\n      }, 1000);\r\n\r\n      initializingRef.current = false;\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      if (mapRef.current) {\r\n        mapRef.current.remove();\r\n        mapRef.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  async function locateUser() {\r\n    if (!mapRef.current) return;\r\n    if (!(\"geolocation\" in navigator)) return;\r\n    try {\r\n      setLoadingLoc(true);\r\n      const pos = await new Promise<GeolocationPosition>((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n          enableHighAccuracy: true,\r\n          timeout: 15000,\r\n          maximumAge: 10000,\r\n        });\r\n      });\r\n      const latlng: [number, number] = [pos.coords.latitude, pos.coords.longitude];\r\n      setUserLocation(latlng);\r\n      \r\n      const L = (window as any).L;\r\n      if (userMarkerRef.current) {\r\n        userMarkerRef.current.setLatLng(latlng);\r\n      } else {\r\n        const youIcon = L.divIcon({\r\n          html: '<div style=\"background:#ef4444;color:#fff;border-radius:9999px;padding:6px 10px;box-shadow:0 2px 6px rgba(0,0,0,.25);font-weight:bold\">üìç You</div>',\r\n          className: '', iconSize: [50, 24], iconAnchor: [25, 12]\r\n        });\r\n        userMarkerRef.current = L.marker(latlng, { icon: youIcon });\r\n        userMarkerRef.current.addTo(mapRef.current);\r\n      }\r\n      mapRef.current.setView(latlng, 15);\r\n      userMarkerRef.current.bindPopup(\"You are here\").openPopup();\r\n      \r\n      // Don't auto-search - let user click \"Search Food Places\" button instead\r\n    } catch (_) {\r\n      // ignore; user may deny permission\r\n    } finally {\r\n      setLoadingLoc(false);\r\n    }\r\n  }\r\n\r\n  // Fixed sample food places data for demonstration (Cebu City area)\r\n  const getSampleFoodPlaces = (centerLatLng: [number, number]) => {\r\n    // Use fixed coordinates around Cebu City instead of relative to click\r\n    const samplePlaces: FoodPlace[] = [\r\n      {\r\n        id: \"1\",\r\n        name: \"Jollibee\",\r\n        category: \"Fast Food\",\r\n        rating: 4.2,\r\n        price_range: \"$$\",\r\n        latitude: 10.3157,\r\n        longitude: 123.8854,\r\n        description: \"Popular Filipino fast food chain\",\r\n        cuisine_type: \"Filipino\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"McDonald's\",\r\n        category: \"Fast Food\",\r\n        rating: 4.0,\r\n        price_range: \"$$\",\r\n        latitude: 10.3167,\r\n        longitude: 123.8864,\r\n        description: \"International fast food chain\",\r\n        cuisine_type: \"American\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"Starbucks Coffee\",\r\n        category: \"Cafe\",\r\n        rating: 4.3,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3147,\r\n        longitude: 123.8844,\r\n        description: \"Premium coffee and pastries\",\r\n        cuisine_type: \"International\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"4\",\r\n        name: \"Chowking\",\r\n        category: \"Restaurant\",\r\n        rating: 4.1,\r\n        price_range: \"$$\",\r\n        latitude: 10.3177,\r\n        longitude: 123.8874,\r\n        description: \"Chinese-Filipino cuisine\",\r\n        cuisine_type: \"Chinese\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"5\",\r\n        name: \"KFC\",\r\n        category: \"Fast Food\",\r\n        rating: 4.0,\r\n        price_range: \"$$\",\r\n        latitude: 10.3137,\r\n        longitude: 123.8834,\r\n        description: \"Fried chicken and sides\",\r\n        cuisine_type: \"American\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"6\",\r\n        name: \"Greenwich Pizza\",\r\n        category: \"Restaurant\",\r\n        rating: 3.9,\r\n        price_range: \"$$\",\r\n        latitude: 10.3187,\r\n        longitude: 123.8884,\r\n        description: \"Pizza and pasta\",\r\n        cuisine_type: \"Italian\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"7\",\r\n        name: \"Mang Inasal\",\r\n        category: \"Restaurant\",\r\n        rating: 4.4,\r\n        price_range: \"$$\",\r\n        latitude: 10.3127,\r\n        longitude: 123.8824,\r\n        description: \"Grilled chicken and Filipino dishes\",\r\n        cuisine_type: \"Filipino\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"8\",\r\n        name: \"Coffee Bean & Tea Leaf\",\r\n        category: \"Cafe\",\r\n        rating: 4.2,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3197,\r\n        longitude: 123.8894,\r\n        description: \"Coffee, tea, and light meals\",\r\n        cuisine_type: \"International\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"9\",\r\n        name: \"Pizza Hut\",\r\n        category: \"Restaurant\",\r\n        rating: 4.1,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3117,\r\n        longitude: 123.8814,\r\n        description: \"Pizza, pasta, and wings\",\r\n        cuisine_type: \"Italian\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"10\",\r\n        name: \"Subway\",\r\n        category: \"Fast Food\",\r\n        rating: 4.0,\r\n        price_range: \"$$\",\r\n        latitude: 10.3207,\r\n        longitude: 123.8904,\r\n        description: \"Fresh sandwiches and salads\",\r\n        cuisine_type: \"American\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"11\",\r\n        name: \"Goldilocks\",\r\n        category: \"Bakery\",\r\n        rating: 4.3,\r\n        price_range: \"$$\",\r\n        latitude: 10.3107,\r\n        longitude: 123.8804,\r\n        description: \"Filipino bakery and cakes\",\r\n        cuisine_type: \"Filipino\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"12\",\r\n        name: \"Red Ribbon\",\r\n        category: \"Bakery\",\r\n        rating: 4.1,\r\n        price_range: \"$$\",\r\n        latitude: 10.3217,\r\n        longitude: 123.8914,\r\n        description: \"Cakes and pastries\",\r\n        cuisine_type: \"Filipino\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"13\",\r\n        name: \"Yellow Cab Pizza\",\r\n        category: \"Restaurant\",\r\n        rating: 4.2,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3097,\r\n        longitude: 123.8794,\r\n        description: \"New York style pizza\",\r\n        cuisine_type: \"Italian\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"14\",\r\n        name: \"Tokyo Tokyo\",\r\n        category: \"Restaurant\",\r\n        rating: 4.0,\r\n        price_range: \"$$\",\r\n        latitude: 10.3227,\r\n        longitude: 123.8924,\r\n        description: \"Japanese fast food\",\r\n        cuisine_type: \"Japanese\",\r\n        is_open: true\r\n      },\r\n      {\r\n        id: \"15\",\r\n        name: \"Bonchon\",\r\n        category: \"Restaurant\",\r\n        rating: 4.4,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3087,\r\n        longitude: 123.8784,\r\n        description: \"Korean fried chicken\",\r\n        cuisine_type: \"Korean\",\r\n        is_open: true\r\n      }\r\n    ];\r\n\r\n    // Filter by cuisine if selected\r\n    let filtered = samplePlaces;\r\n    if (cuisineFilter) {\r\n      filtered = filtered.filter(place => \r\n        place.cuisine_type?.toLowerCase().includes(cuisineFilter.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Filter by price if selected\r\n    if (priceFilter) {\r\n      filtered = filtered.filter(place => place.price_range === priceFilter);\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  async function searchFoodPlaces(centerLatLng: [number, number]) {\r\n    setLoadingPlaces(true);\r\n    try {\r\n      console.log(\"Searching for real food places at:\", centerLatLng);\r\n      \r\n      // Use OpenStreetMap Overpass API for real restaurant data\r\n      const places = await fetchRealFoodPlaces(centerLatLng);\r\n      \r\n      console.log(\"Found\", places.length, \"real places\");\r\n      setFoodPlaces(places);\r\n      \r\n      // Wait a bit to ensure map is ready\r\n      setTimeout(() => {\r\n        plotFoodMarkers(places);\r\n      }, 100);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error fetching food places:\", error);\r\n      // Fallback to sample data if real data fails\r\n      console.log(\"Falling back to sample data\");\r\n      const places = getSampleFoodPlaces(centerLatLng);\r\n      setFoodPlaces(places);\r\n      setTimeout(() => {\r\n        plotFoodMarkers(places);\r\n      }, 100);\r\n    } finally {\r\n      setLoadingPlaces(false);\r\n    }\r\n  }\r\n\r\n  // Load initial food places only once\r\n  const loadInitialFoodPlaces = useMemo(() => {\r\n    return () => {\r\n      searchFoodPlaces(defaultCenter);\r\n    };\r\n  }, []);\r\n\r\n  async function fetchRealFoodPlaces(centerLatLng: [number, number]) {\r\n    const [lat, lon] = centerLatLng;\r\n    const radius = 1000; // 1km radius\r\n    \r\n    // OpenStreetMap Overpass API query for restaurants, cafes, and fast food\r\n    const query = `\r\n[out:json][timeout:25];\r\n(\r\n  node[\"amenity\"=\"restaurant\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"cafe\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"fast_food\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"bar\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"pub\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"food_court\"](around:${radius},${lat},${lon});\r\n  node[\"shop\"=\"bakery\"](around:${radius},${lat},${lon});\r\n  node[\"shop\"=\"confectionery\"](around:${radius},${lat},${lon});\r\n);\r\nout;\r\n`;\r\n\r\n    const response = await fetch('https://overpass-api.de/api/interpreter', {\r\n      method: 'POST',\r\n      body: query,\r\n      headers: {\r\n        'Content-Type': 'text/plain',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // Transform OpenStreetMap data to our format\r\n    const places: FoodPlace[] = data.elements.map((element: any, index: number) => {\r\n      const tags = element.tags || {};\r\n      \r\n      // Determine category and cuisine type\r\n      let category = 'Restaurant';\r\n      let cuisineType = 'International';\r\n      \r\n      if (tags.amenity === 'cafe') {\r\n        category = 'Cafe';\r\n        cuisineType = 'Coffee';\r\n      } else if (tags.amenity === 'fast_food') {\r\n        category = 'Fast Food';\r\n        cuisineType = 'Fast Food';\r\n      } else if (tags.amenity === 'bar' || tags.amenity === 'pub') {\r\n        category = 'Bar';\r\n        cuisineType = 'International';\r\n      } else if (tags.shop === 'bakery') {\r\n        category = 'Bakery';\r\n        cuisineType = 'Bakery';\r\n      }\r\n      \r\n      // Determine cuisine type from tags\r\n      if (tags.cuisine) {\r\n        cuisineType = tags.cuisine;\r\n      } else if (tags.brand) {\r\n        const brand = tags.brand.toLowerCase();\r\n        if (brand.includes('jollibee') || brand.includes('chowking') || brand.includes('mang inasal')) {\r\n          cuisineType = 'Filipino';\r\n        } else if (brand.includes('mcdonalds') || brand.includes('kfc') || brand.includes('subway')) {\r\n          cuisineType = 'American';\r\n        } else if (brand.includes('starbucks') || brand.includes('coffee bean')) {\r\n          cuisineType = 'Coffee';\r\n        }\r\n      }\r\n      \r\n      // Generate random rating (since OSM doesn't have ratings)\r\n      const rating = 3.5 + Math.random() * 1.5; // 3.5 to 5.0\r\n      \r\n      // Determine price range\r\n      let priceRange = '$$';\r\n      if (tags.amenity === 'cafe' && tags.brand && tags.brand.toLowerCase().includes('starbucks')) {\r\n        priceRange = '$$$';\r\n      } else if (tags.amenity === 'restaurant' && !tags.amenity === 'fast_food') {\r\n        priceRange = Math.random() > 0.5 ? '$$$' : '$$';\r\n      }\r\n      \r\n      return {\r\n        id: `osm_${element.id || index}`,\r\n        name: tags.name || tags.brand || 'Unnamed Place',\r\n        category: category,\r\n        rating: Math.round(rating * 10) / 10,\r\n        price_range: priceRange,\r\n        latitude: element.lat,\r\n        longitude: element.lon,\r\n        description: tags.description || tags.cuisine || category,\r\n        cuisine_type: cuisineType,\r\n        is_open: true\r\n      };\r\n    });\r\n\r\n    // Filter by cuisine if selected\r\n    let filtered = places;\r\n    if (cuisineFilter) {\r\n      filtered = filtered.filter(place => \r\n        place.cuisine_type?.toLowerCase().includes(cuisineFilter.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Filter by price if selected\r\n    if (priceFilter) {\r\n      filtered = filtered.filter(place => place.price_range === priceFilter);\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  function plotFoodMarkers(places: FoodPlace[]) {\r\n    const L = (window as any).L;\r\n    \r\n    // Check if Leaflet is loaded and map is ready\r\n    if (!L || !mapRef.current) {\r\n      console.log(\"Leaflet not loaded or map not ready yet\");\r\n      return;\r\n    }\r\n    \r\n    // Clear existing food markers\r\n    foodMarkersRef.current.forEach(marker => {\r\n      try { marker.remove(); } catch {}\r\n    });\r\n    foodMarkersRef.current = [];\r\n\r\n    console.log(\"Plotting\", places.length, \"food places\");\r\n\r\n    // Add markers for each food place with modern styling\r\n    places.forEach((place) => {\r\n      const getCategoryIcon = (category: string) => {\r\n        const cat = category.toLowerCase();\r\n        if (cat.includes(\"restaurant\") || cat.includes(\"food\")) return \"üçΩÔ∏è\";\r\n        if (cat.includes(\"cafe\") || cat.includes(\"coffee\")) return \"‚òï\";\r\n        if (cat.includes(\"bar\")) return \"üç∫\";\r\n        if (cat.includes(\"fast\")) return \"üçî\";\r\n        if (cat.includes(\"pizza\")) return \"üçï\";\r\n        if (cat.includes(\"bakery\")) return \"ü•ñ\";\r\n        return \"üç¥\";\r\n      };\r\n\r\n      const getCategoryColor = (category: string) => {\r\n        const cat = category.toLowerCase();\r\n        if (cat.includes(\"cafe\") || cat.includes(\"coffee\")) return \"#059669\";\r\n        if (cat.includes(\"fast\")) return \"#dc2626\";\r\n        if (cat.includes(\"bar\")) return \"#7c3aed\";\r\n        if (cat.includes(\"bakery\")) return \"#d97706\";\r\n        return \"#8c52ff\";\r\n      };\r\n\r\n      const iconHtml = `\r\n        <div style=\"\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n          background: linear-gradient(135deg, ${getCategoryColor(place.category)}, ${getCategoryColor(place.category)}dd);\r\n          color: #fff;\r\n          border-radius: 25px;\r\n          padding: 8px 14px;\r\n          box-shadow: 0 6px 20px rgba(0,0,0,0.25);\r\n          font-size: 13px;\r\n          font-weight: 700;\r\n          border: 3px solid #fff;\r\n          transition: transform 0.2s ease;\r\n          cursor: pointer;\r\n          min-width: 60px;\r\n          justify-content: center;\r\n        \">\r\n          <span style=\"font-size: 16px;\">${getCategoryIcon(place.category)}</span>\r\n          <span>${place.rating ? place.rating.toFixed(1) : \"‚òÖ\"}</span>\r\n        </div>\r\n      `;\r\n\r\n      const customIcon = L.divIcon({ \r\n        html: iconHtml, \r\n        className: \"modern-food-marker\", \r\n        iconSize: [80, 35], \r\n        iconAnchor: [40, 17.5],\r\n        popupAnchor: [0, -17.5]\r\n      });\r\n\r\n      const marker = L.marker([place.latitude, place.longitude], { \r\n        icon: customIcon,\r\n        riseOnHover: true\r\n      });\r\n      \r\n      // Modern popup with better styling\r\n      const popupContent = `\r\n        <div style=\"min-width: 240px; font-family: system-ui, -apple-system, sans-serif; padding: 4px;\">\r\n          <div style=\"display: flex; align-items: center; gap: 10px; margin-bottom: 10px;\">\r\n            <span style=\"font-size: 20px;\">${getCategoryIcon(place.category)}</span>\r\n            <div>\r\n              <h3 style=\"margin: 0; font-size: 16px; font-weight: 700; color: #111827; line-height: 1.2;\">${place.name}</h3>\r\n              <p style=\"margin: 2px 0 0 0; font-size: 13px; color: #6b7280; font-weight: 500;\">${place.category}</p>\r\n            </div>\r\n          </div>\r\n          <div style=\"display: flex; align-items: center; gap: 6px; margin-bottom: 10px; flex-wrap: wrap;\">\r\n            <div style=\"display: flex; align-items: center; gap: 2px; background: #fef3c7; padding: 3px 8px; border-radius: 12px;\">\r\n              <span style=\"color: #f59e0b; font-size: 12px;\">‚≠ê</span>\r\n              <span style=\"font-weight: 600; font-size: 12px; color: #92400e;\">${place.rating ? place.rating.toFixed(1) : \"N/A\"}</span>\r\n            </div>\r\n            ${place.price_range ? `\r\n            <div style=\"background: #e0e7ff; padding: 3px 8px; border-radius: 12px;\">\r\n              <span style=\"color: #3730a3; font-size: 12px; font-weight: 500;\">${place.price_range}</span>\r\n            </div>\r\n            ` : ''}\r\n            ${place.cuisine_type ? `\r\n            <div style=\"background: #f3f4f6; padding: 3px 8px; border-radius: 12px;\">\r\n              <span style=\"color: #374151; font-size: 12px; font-weight: 500;\">${place.cuisine_type}</span>\r\n            </div>\r\n            ` : ''}\r\n          </div>\r\n          ${place.description ? `\r\n          <p style=\"margin: 0; font-size: 14px; color: #4b5563; line-height: 1.4; margin-bottom: 10px;\">${place.description}</p>\r\n          ` : ''}\r\n          <div style=\"padding-top: 8px; border-top: 1px solid #e5e7eb;\">\r\n            <div style=\"display: flex; align-items: center; gap: 4px; font-size: 11px; color: #9ca3af;\">\r\n              <span>üìç</span>\r\n              <span>${place.latitude.toFixed(6)}, ${place.longitude.toFixed(6)}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      \r\n      marker.bindPopup(popupContent, {\r\n        maxWidth: 300,\r\n        className: 'modern-popup',\r\n        closeButton: true,\r\n        autoClose: false,\r\n        closeOnClick: false\r\n      });\r\n      \r\n      // Add hover effects\r\n      marker.on('mouseover', function() {\r\n        this.openPopup();\r\n      });\r\n      \r\n      marker.on('click', () => setSelectedPlace(place));\r\n      \r\n      marker.addTo(mapRef.current);\r\n      foodMarkersRef.current.push(marker);\r\n    });\r\n  }\r\n\r\n  async function geocodeSearch(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    if (!query.trim()) return;\r\n    setSearching(true);\r\n    try {\r\n      // Restrict to Philippines results where possible\r\n      const url = `https://nominatim.openstreetmap.org/search?format=json&countrycodes=ph&limit=5&q=${encodeURIComponent(query)}`;\r\n      const res = await fetch(url, { headers: { \"Accept-Language\": \"en\" } });\r\n      const data = await res.json();\r\n      if (data && data.length > 0) {\r\n        const best = data[0];\r\n        const lat = parseFloat(best.lat);\r\n        const lon = parseFloat(best.lon);\r\n        const latlng: [number, number] = [lat, lon];\r\n        \r\n        // Center map on search result\r\n        mapRef.current.setView(latlng, 15);\r\n        // Only search for food places when explicitly searching for a location\r\n        searchFoodPlaces(latlng);\r\n        \r\n        setSuggestions(\r\n          data.map((d: any) => ({ display: d.display_name, lat: parseFloat(d.lat), lon: parseFloat(d.lon) }))\r\n        );\r\n        setShowSuggestions(true);\r\n      } else {\r\n        setSuggestions([]);\r\n        setShowSuggestions(false);\r\n        alert(\"No results found in the Philippines.\");\r\n      }\r\n    } finally {\r\n      setSearching(false);\r\n    }\r\n  }\r\n\r\n  // Live suggestions with debounce on input change\r\n  function onQueryChange(v: string) {\r\n    setQuery(v);\r\n    if (debounceRef.current) clearTimeout(debounceRef.current);\r\n    if (!v.trim()) {\r\n      setSuggestions([]);\r\n      setShowSuggestions(false);\r\n      return;\r\n    }\r\n    debounceRef.current = setTimeout(async () => {\r\n      try {\r\n        const url = `https://nominatim.openstreetmap.org/search?format=json&countrycodes=ph&limit=5&q=${encodeURIComponent(v)}`;\r\n        const res = await fetch(url, { headers: { \"Accept-Language\": \"en\" } });\r\n        const data = await res.json();\r\n        setSuggestions((data || []).map((d: any) => ({ display: d.display_name, lat: parseFloat(d.lat), lon: parseFloat(d.lon) })));\r\n        setShowSuggestions(true);\r\n      } catch {\r\n        // ignore\r\n      }\r\n    }, 400);\r\n  }\r\n\r\n  // Filter food places when filters change\r\n  useEffect(() => {\r\n    if (foodPlaces.length > 0) {\r\n      const filtered = foodPlaces.filter(place => {\r\n        const cuisineMatch = !cuisineFilter || (place.cuisine_type || \"\").toLowerCase().includes(cuisineFilter.toLowerCase());\r\n        const priceMatch = !priceFilter || place.price_range === priceFilter;\r\n        return cuisineMatch && priceMatch;\r\n      });\r\n      plotFoodMarkers(filtered);\r\n    }\r\n  }, [cuisineFilter, priceFilter, foodPlaces]);\r\n\r\n  // Test function to verify sample data works\r\n  useEffect(() => {\r\n    console.log(\"Food places state:\", foodPlaces);\r\n  }, [foodPlaces]);\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"container py-4\">\r\n        {/* Header */}\r\n        <div className=\"mb-6\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">üçΩÔ∏è Food Discovery Map</h1>\r\n          <p className=\"text-gray-600\">Find the best restaurants, cafes, and food places in the Philippines</p>\r\n          <div className=\"mt-2 p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n            <p className=\"text-sm text-green-700\">\r\n              <strong>Real Data Mode:</strong> Now showing real restaurants and cafes from OpenStreetMap! Use \"My Location\" to center the map, then click \"Search Food Places\" to find restaurants in the current view area.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search and Filters */}\r\n        <div className=\"mb-4 bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\r\n          <div className=\"flex flex-col lg:flex-row gap-4\">\r\n            {/* Search Bar */}\r\n            <form onSubmit={geocodeSearch} className=\"relative flex-1\">\r\n              <div className=\"relative\">\r\n            <input\r\n              value={query}\r\n              onChange={(e) => onQueryChange(e.target.value)}\r\n              onFocus={() => suggestions.length && setShowSuggestions(true)}\r\n                  placeholder=\"Search for restaurants, cafes, or food places...\"\r\n                  className=\"h-12 w-full px-4 pr-12 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#8c52ff] focus:border-transparent outline-none\"\r\n                />\r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"absolute right-2 top-1/2 -translate-y-1/2 h-8 px-4 rounded-md bg-[#8c52ff] text-white text-sm hover:opacity-90\"\r\n                >\r\n                  {searching ? \"...\" : \"Search\"}\r\n                </button>\r\n              </div>\r\n            {showSuggestions && suggestions.length > 0 && (\r\n                <div className=\"absolute top-14 left-0 right-0 z-20 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-y-auto\">\r\n                {suggestions.map((s, i) => (\r\n                  <button\r\n                    type=\"button\"\r\n                    key={`${s.lat}-${s.lon}-${i}`}\r\n                    onClick={() => {\r\n                        const latlng: [number, number] = [s.lat, s.lon];\r\n                        mapRef.current.setView(latlng, 15);\r\n                        searchFoodPlaces(latlng);\r\n                      setShowSuggestions(false);\r\n                    }}\r\n                      className=\"block w-full text-left px-4 py-3 hover:bg-gray-50 text-sm border-b border-gray-100 last:border-b-0\"\r\n                  >\r\n                    {s.display}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </form>\r\n\r\n            {/* Filters */}\r\n            <div className=\"flex gap-3\">\r\n              <select \r\n                value={cuisineFilter} \r\n                onChange={(e) => setCuisineFilter(e.target.value)} \r\n                className=\"h-12 px-4 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#8c52ff] focus:border-transparent outline-none\"\r\n              >\r\n                <option value=\"\">All Cuisines</option>\r\n                <option value=\"filipino\">Filipino</option>\r\n                <option value=\"chinese\">Chinese</option>\r\n                <option value=\"japanese\">Japanese</option>\r\n                <option value=\"korean\">Korean</option>\r\n                <option value=\"italian\">Italian</option>\r\n                <option value=\"american\">American</option>\r\n                <option value=\"thai\">Thai</option>\r\n                <option value=\"indian\">Indian</option>\r\n              </select>\r\n              \r\n              <select \r\n                value={priceFilter} \r\n                onChange={(e) => setPriceFilter(e.target.value)} \r\n                className=\"h-12 px-4 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#8c52ff] focus:border-transparent outline-none\"\r\n              >\r\n                <option value=\"\">All Prices</option>\r\n                <option value=\"$\">$ Budget</option>\r\n                <option value=\"$$\">$$ Moderate</option>\r\n                <option value=\"$$$\">$$$ Expensive</option>\r\n                <option value=\"$$$$\">$$$$ Very Expensive</option>\r\n            </select>\r\n              \r\n              <button\r\n                onClick={locateUser} \r\n                disabled={loadingLoc} \r\n                className=\"h-12 px-6 rounded-lg bg-gray-100 text-gray-700 hover:bg-gray-200 disabled:opacity-50 flex items-center gap-2\"\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                </svg>\r\n                {loadingLoc ? \"Locating...\" : \"My Location\"}\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  if (mapRef.current) {\r\n                    const center = mapRef.current.getCenter();\r\n                    searchFoodPlaces([center.lat, center.lng]);\r\n                  }\r\n                }}\r\n                disabled={loadingPlaces}\r\n                className=\"h-12 px-6 rounded-lg bg-green-600 text-white hover:bg-green-700 disabled:opacity-50 flex items-center gap-2\"\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                </svg>\r\n                {loadingPlaces ? \"Searching...\" : \"Search Food Places\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Map Container */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n          <div ref={mapEl} style={{ width: \"100%\", height: \"70vh\" }} />\r\n        </div>\r\n\r\n        {/* Food Places List */}\r\n        <div className=\"mt-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">\r\n              üç¥ Food Places {loadingPlaces ? \"(loading...)\" : `(${foodPlaces.length})`}\r\n            </h2>\r\n            {userLocation && (\r\n              <p className=\"text-sm text-gray-500\">\r\n                üìç Showing places near your location\r\n              </p>\r\n            )}\r\n          </div>\r\n          \r\n          {foodPlaces.length === 0 && !loadingPlaces && (\r\n            <div className=\"text-center py-12 bg-white rounded-lg border border-gray-200\">\r\n              <div className=\"text-6xl mb-4\">üçΩÔ∏è</div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No food places found</h3>\r\n              <p className=\"text-gray-600\">Try searching for a different area or adjust your filters</p>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {foodPlaces.map((place) => (\r\n              <div \r\n                key={place.id} \r\n                className={`bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow cursor-pointer ${\r\n                  selectedPlace?.id === place.id ? 'ring-2 ring-[#8c52ff]' : ''\r\n                }`}\r\n                onClick={() => setSelectedPlace(place)}\r\n              >\r\n                <div className=\"flex items-start justify-between mb-2\">\r\n                  <h3 className=\"font-semibold text-gray-900 text-lg\">{place.name}</h3>\r\n                  {place.rating && (\r\n                    <div className=\"flex items-center gap-1 text-yellow-500\">\r\n                      <span className=\"text-sm\">‚≠ê</span>\r\n                      <span className=\"text-sm font-medium\">{place.rating.toFixed(1)}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <p className=\"text-gray-600 text-sm mb-2\">{place.category}</p>\r\n                \r\n                {place.cuisine_type && (\r\n                  <p className=\"text-gray-500 text-xs mb-2\">{place.cuisine_type}</p>\r\n                )}\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                  {place.price_range && (\r\n                    <span className=\"text-green-600 font-medium text-sm\">{place.price_range}</span>\r\n                  )}\r\n                  <button \r\n                    className=\"text-[#8c52ff] text-sm font-medium hover:underline\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      // Center map on this place\r\n                      mapRef.current.setView([place.latitude, place.longitude], 16);\r\n                    }}\r\n                  >\r\n                    View on Map\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}