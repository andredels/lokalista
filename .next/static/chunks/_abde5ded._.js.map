{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/lokalista/lib/restaurants.ts"],"sourcesContent":["// Shared restaurant data fetching utilities\r\n\r\n// Get real rating from Google Places API\r\nasync function getRealRating(placeName: string, lat: number, lon: number): Promise<number | null> {\r\n  try {\r\n    // Note: This would require a Google Places API key\r\n    // For now, we'll use intelligent defaults based on known chains\r\n    return getKnownChainRating(placeName);\r\n  } catch (error) {\r\n    console.warn('Could not fetch real rating for:', placeName);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Get rating for known chains based on real-world data\r\nfunction getKnownChainRating(placeName: string): number | null {\r\n  if (!placeName) return null;\r\n  \r\n  const name = placeName.toLowerCase();\r\n  \r\n  // Real-world average ratings for major chains in the Philippines\r\n  const chainRatings: { [key: string]: number } = {\r\n    'jollibee': 4.2,\r\n    'mcdonald': 4.0,\r\n    'kfc': 4.1,\r\n    'starbucks': 4.3,\r\n    'chowking': 4.1,\r\n    'pizza hut': 4.1,\r\n    'subway': 4.0,\r\n    'mang inasal': 4.4,\r\n    'greenwich': 3.9,\r\n    'tokyo tokyo': 4.0,\r\n    'bonchon': 4.4,\r\n    'goldilocks': 4.3,\r\n    'red ribbon': 4.1,\r\n    'yellow cab': 4.2,\r\n    'coffee bean': 4.2,\r\n    'tim hortons': 4.1,\r\n    'dunkin': 4.0,\r\n    'wendy': 4.0,\r\n    'burger king': 3.9,\r\n    'domino': 4.0,\r\n    'papa john': 3.8,\r\n    'shakey': 4.1,\r\n    'max': 4.2,\r\n    'mary grace': 4.3,\r\n    'contis': 4.2,\r\n    'red ribbon': 4.1,\r\n    'goldilocks': 4.3\r\n  };\r\n  \r\n  // Check for exact matches first\r\n  for (const [chain, rating] of Object.entries(chainRatings)) {\r\n    if (name.includes(chain)) {\r\n      return rating;\r\n    }\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n// Intelligent rating based on place characteristics\r\nfunction getIntelligentRating(tags: any, category: string): number {\r\n  let baseRating = 3.5;\r\n  \r\n  // Boost rating for certain amenities\r\n  if (tags.amenity === 'restaurant') {\r\n    baseRating = 3.8;\r\n  } else if (tags.amenity === 'cafe') {\r\n    baseRating = 4.0;\r\n  } else if (tags.amenity === 'fast_food') {\r\n    baseRating = 3.6;\r\n  }\r\n  \r\n  // Boost for established brands\r\n  if (tags.brand) {\r\n    baseRating += 0.3;\r\n  }\r\n  \r\n  // Boost for places with more information (likely more established)\r\n  if (tags.website) baseRating += 0.1;\r\n  if (tags.phone) baseRating += 0.1;\r\n  if (tags.opening_hours) baseRating += 0.1;\r\n  if (tags.cuisine) baseRating += 0.1;\r\n  \r\n  // Add some realistic variation\r\n  const variation = (Math.random() - 0.5) * 0.4; // ¬±0.2 variation\r\n  const finalRating = Math.max(2.5, Math.min(5.0, baseRating + variation));\r\n  \r\n  return Math.round(finalRating * 10) / 10;\r\n}\r\n\r\nexport interface FoodPlace {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  rating: number;\r\n  price_range: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  description: string;\r\n  image_url?: string;\r\n  cuisine_type?: string;\r\n  is_open?: boolean;\r\n  features?: string[];\r\n  distance?: number;\r\n  trend?: string; // For trending indicators\r\n}\r\n\r\nexport async function fetchRealFoodPlaces(centerLatLng: [number, number]): Promise<FoodPlace[]> {\r\n  const [lat, lon] = centerLatLng;\r\n  const radius = 1000; // 1km radius\r\n  \r\n  // OpenStreetMap Overpass API query for restaurants, cafes, and fast food\r\n  const query = `\r\n[out:json][timeout:25];\r\n(\r\n  node[\"amenity\"=\"restaurant\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"cafe\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"fast_food\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"bar\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"pub\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"food_court\"](around:${radius},${lat},${lon});\r\n  node[\"shop\"=\"bakery\"](around:${radius},${lat},${lon});\r\n  node[\"shop\"=\"confectionery\"](around:${radius},${lat},${lon});\r\n);\r\nout;\r\n`;\r\n\r\n  const response = await fetch('https://overpass-api.de/api/interpreter', {\r\n    method: 'POST',\r\n    body: query,\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  const data = await response.json();\r\n  \r\n  // Transform OpenStreetMap data to our format\r\n  const places: FoodPlace[] = await Promise.all(data.elements.map(async (element: any, index: number) => {\r\n    const tags = element.tags || {};\r\n    \r\n    // Determine category and cuisine type\r\n    let category = 'Restaurant';\r\n    let cuisineType = 'International';\r\n    \r\n    if (tags.amenity === 'cafe') {\r\n      category = 'Cafe';\r\n      cuisineType = 'Coffee';\r\n    } else if (tags.amenity === 'fast_food') {\r\n      category = 'Fast Food';\r\n      cuisineType = 'Fast Food';\r\n    } else if (tags.amenity === 'bar' || tags.amenity === 'pub') {\r\n      category = 'Bar';\r\n      cuisineType = 'International';\r\n    } else if (tags.shop === 'bakery') {\r\n      category = 'Bakery';\r\n      cuisineType = 'Bakery';\r\n    }\r\n    \r\n    // Determine cuisine type from tags\r\n    if (tags.cuisine) {\r\n      cuisineType = tags.cuisine;\r\n    } else if (tags.brand) {\r\n      const brand = tags.brand.toLowerCase();\r\n      if (brand.includes('jollibee') || brand.includes('chowking') || brand.includes('mang inasal')) {\r\n        cuisineType = 'Filipino';\r\n      } else if (brand.includes('mcdonalds') || brand.includes('kfc') || brand.includes('subway')) {\r\n        cuisineType = 'American';\r\n      } else if (brand.includes('starbucks') || brand.includes('coffee bean')) {\r\n        cuisineType = 'Coffee';\r\n      }\r\n    }\r\n    \r\n    // Get real rating from Google Places API or use intelligent defaults\r\n    let rating = await getRealRating(tags.name || tags.brand, element.lat, element.lon);\r\n    \r\n    // Fallback to intelligent rating based on place characteristics\r\n    if (!rating) {\r\n      rating = getIntelligentRating(tags, category);\r\n    }\r\n    \r\n    // Determine price range\r\n    let priceRange = '$$';\r\n    if (tags.amenity === 'cafe' && tags.brand && tags.brand.toLowerCase().includes('starbucks')) {\r\n      priceRange = '$$$';\r\n    } else if (tags.amenity === 'restaurant' && !tags.amenity === 'fast_food') {\r\n      priceRange = Math.random() > 0.5 ? '$$$' : '$$';\r\n    }\r\n    \r\n    return {\r\n      id: `osm_${element.id || index}`,\r\n      name: tags.name || tags.brand || 'Unnamed Place',\r\n      category: category,\r\n      rating: Math.round(rating * 10) / 10,\r\n      price_range: priceRange,\r\n      latitude: element.lat,\r\n      longitude: element.lon,\r\n      description: tags.description || tags.cuisine || category,\r\n      cuisine_type: cuisineType,\r\n      is_open: true\r\n    };\r\n  }));\r\n\r\n  return places;\r\n}\r\n\r\n// Get trending restaurants from real data\r\nexport async function getTrendingRestaurants(centerLatLng: [number, number]): Promise<FoodPlace[]> {\r\n  try {\r\n    const places = await fetchRealFoodPlaces(centerLatLng);\r\n    \r\n    // Sort by rating and take top 8 as trending\r\n    const trending = places\r\n      .sort((a, b) => b.rating - a.rating)\r\n      .slice(0, 8)\r\n      .map((place, index) => ({\r\n        ...place,\r\n        // Add trend indicators based on position\r\n        trend: index === 0 ? 'üî• Hot' : \r\n               index === 1 ? 'üìà Rising' : \r\n               index === 2 ? '‚≠ê Popular' : \r\n               index === 3 ? 'üöÄ Trending' : \r\n               index === 4 ? 'üëë Top' : \r\n               index === 5 ? 'üí´ New' : \r\n               index === 6 ? 'üèÜ Classic' : \r\n               'üéØ Trending'\r\n      }));\r\n    \r\n    return trending;\r\n  } catch (error) {\r\n    console.error('Error fetching trending restaurants:', error);\r\n    return [];\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///C:/lokalista/app/feed/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { fetchRealFoodPlaces, type FoodPlace } from \"@/lib/restaurants\";\r\n\r\ninterface Restaurant {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  rating: number;\r\n  price_range: string;\r\n  location: string;\r\n  vibe: string;\r\n  menu?: string[];\r\n  image: string;\r\n  tip?: string;\r\n  latitude?: number;\r\n  longitude?: number;\r\n}\r\n\r\ninterface Message {\r\n  id: string;\r\n  content?: string;\r\n  isUser: boolean;\r\n  timestamp: Date;\r\n  restaurants?: Restaurant[];\r\n  isTyping?: boolean;\r\n}\r\n\r\nexport default function AIAssistantPage() {\r\n  const router = useRouter();\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const [userLocation, setUserLocation] = useState<[number, number] | null>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const [locationReady, setLocationReady] = useState(false);\r\n  const [locationError, setLocationError] = useState(false);\r\n\r\n  // Get user's current location on mount\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const coords: [number, number] = [position.coords.latitude, position.coords.longitude];\r\n          setUserLocation(coords);\r\n          setLocationReady(true);\r\n          console.log('Location detected:', coords);\r\n          \r\n          // Add welcome message once location is ready\r\n          setMessages([{\r\n            id: \"1\",\r\n            content: `Hello! I'm your AI assistant for Lokalista. I've detected your location and I can help you find the perfect restaurants, cafes, and events near you. What would you like to discover?`,\r\n            isUser: false,\r\n            timestamp: new Date(),\r\n          }]);\r\n        },\r\n        (error) => {\r\n          console.warn('Geolocation error:', error);\r\n          // If permission denied or error, use default location\r\n          setUserLocation([14.5995, 120.9842]); // Manila, Philippines\r\n          setLocationReady(true);\r\n          setLocationError(true);\r\n          \r\n          // Add welcome message with error notice\r\n          setMessages([{\r\n            id: \"1\",\r\n            content: \"Hello! I'm your AI assistant for Lokalista. I couldn't access your location, so I'll show results for a general area. Allow location access for better recommendations near you. What would you like to discover?\",\r\n            isUser: false,\r\n            timestamp: new Date(),\r\n          }]);\r\n        }\r\n      );\r\n    } else {\r\n      // Fallback if geolocation not supported\r\n      setUserLocation([14.5995, 120.9842]);\r\n      setLocationReady(true);\r\n      setLocationError(true);\r\n      \r\n      setMessages([{\r\n        id: \"1\",\r\n        content: \"Hello! I'm your AI assistant for Lokalista. Location services aren't available in your browser. What would you like to discover?\",\r\n        isUser: false,\r\n        timestamp: new Date(),\r\n      }]);\r\n    }\r\n  }, []);\r\n\r\n  // Convert FoodPlace to Restaurant format\r\n  const convertToRestaurant = (place: FoodPlace): Restaurant => {\r\n    // Generate vibe based on category and name\r\n    const getVibe = (category: string, name: string) => {\r\n      const lowerName = name.toLowerCase();\r\n      if (category.includes(\"Cafe\") || lowerName.includes(\"coffee\")) {\r\n        return lowerName.includes(\"cozy\") || lowerName.includes(\"quiet\") \r\n          ? \"Cozy and quiet, perfect for work or relaxation\" \r\n          : \"Modern and welcoming, great for meetings\";\r\n      }\r\n      if (category.includes(\"Fast Food\")) {\r\n        return \"Quick and convenient, family-friendly\";\r\n      }\r\n      if (category.includes(\"Local\")) {\r\n        return \"Authentic Filipino experience\";\r\n      }\r\n      return \"Welcoming atmosphere, great for dining\";\r\n    };\r\n\r\n    // Generate tip based on place\r\n    const getTip = (category: string, name: string) => {\r\n      if (category.includes(\"Cafe\")) return \"Visit during off-peak hours for a more peaceful experience.\";\r\n      if (category.includes(\"Fast Food\")) return \"Most locations are open until late, great for quick meals.\";\r\n      if (name.toLowerCase().includes(\"starbucks\")) return \"Peak hours are lunch and afternoon, try early morning.\";\r\n      return \"Check hours before visiting to avoid disappointment.\";\r\n    };\r\n\r\n    return {\r\n      id: place.id,\r\n      name: place.name,\r\n      category: place.category,\r\n      rating: place.rating,\r\n      price_range: place.price_range,\r\n      location: place.description || `Near your location`,\r\n      vibe: getVibe(place.category, place.name),\r\n      image: place.image_url || \"/Landing.png\",\r\n      tip: getTip(place.category, place.name),\r\n      latitude: place.latitude,\r\n      longitude: place.longitude\r\n    };\r\n  };\r\n\r\n  const generateRecommendations = async (userInput: string): Promise<Restaurant[]> => {\r\n    if (!userLocation) {\r\n      return [];\r\n    }\r\n\r\n    const input = userInput.toLowerCase();\r\n    \r\n    try {\r\n      // Fetch real food places near user location\r\n      const foodPlaces = await fetchRealFoodPlaces(userLocation);\r\n      \r\n      // Filter based on keywords\r\n      let matches: FoodPlace[] = [];\r\n      \r\n      if (input.includes(\"coffee\") || input.includes(\"cafe\") || input.includes(\"cozy\")) {\r\n        matches = foodPlaces.filter(p => \r\n          p.category.toLowerCase().includes(\"cafe\") || \r\n          p.name.toLowerCase().includes(\"coffee\") ||\r\n          p.name.toLowerCase().includes(\"cafe\")\r\n        );\r\n      } else if (input.includes(\"fast food\") || input.includes(\"quick\") || input.includes(\"cheap\")) {\r\n        matches = foodPlaces.filter(p => \r\n          p.category.toLowerCase().includes(\"fast\") || \r\n          p.price_range === \"$\"\r\n        );\r\n      } else if (input.includes(\"budget\") || input.includes(\"affordable\")) {\r\n        matches = foodPlaces.filter(p => p.price_range === \"$\");\r\n      } else if (input.includes(\"local\") || input.includes(\"filipino\")) {\r\n        matches = foodPlaces.filter(p => \r\n          p.category.toLowerCase().includes(\"local\") || \r\n          p.cuisine_type?.toLowerCase().includes(\"filipino\")\r\n        );\r\n      } else {\r\n        matches = foodPlaces.slice(0, 3);\r\n      }\r\n      \r\n      // Limit to 3 results\r\n      const limited = matches.slice(0, 3);\r\n      \r\n      // Convert to Restaurant format\r\n      return limited.map(convertToRestaurant);\r\n    } catch (error) {\r\n      console.error('Error fetching recommendations:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      content: inputMessage.trim(),\r\n      isUser: true,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputMessage(\"\");\r\n    setIsLoading(true);\r\n\r\n    // Fetch real recommendations based on location\r\n    try {\r\n      const restaurants = await generateRecommendations(inputMessage.trim());\r\n      const aiResponse: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        content: restaurants.length > 0 \r\n          ? `Here are ${restaurants.length} ${inputMessage.trim().toLowerCase().includes('cozy') ? 'cozy' : inputMessage.trim().toLowerCase().includes('coffee') ? 'coffee' : ''} recommendations near your location:`\r\n          : \"I couldn't find places matching your request. Try asking for 'coffee', 'fast food', or 'budget-friendly' options.\",\r\n        restaurants: restaurants,\r\n        isUser: false,\r\n        timestamp: new Date(),\r\n      };\r\n      setMessages(prev => [...prev, aiResponse]);\r\n    } catch (error) {\r\n      const errorMessage: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        content: \"Sorry, I couldn't fetch recommendations right now. Please try again or use the map to explore nearby places.\",\r\n        isUser: false,\r\n        timestamp: new Date(),\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleViewOnMap = (restaurant: Restaurant) => {\r\n    if (restaurant.latitude && restaurant.longitude) {\r\n      router.push(`/map?lat=${restaurant.latitude}&lng=${restaurant.longitude}&restaurant=${encodeURIComponent(restaurant.name)}`);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const quickActions = [\r\n    \"Good coffee spot near me\",\r\n    \"Budget-friendly places near me\",\r\n    \"Fast food near me\",\r\n    \"Cozy cafes for working\",\r\n    \"Quick meals nearby\",\r\n    \"Popular restaurants near me\"\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 via-white to-pink-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white border-b border-gray-200 shadow-sm\">\r\n        <div className=\"max-w-4xl mx-auto px-4 py-6\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl flex items-center justify-center\">\r\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n              </svg>\r\n            </div>\r\n          <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">AI Assistant</h1>\r\n              <p className=\"text-gray-600\">Your personal food discovery companion</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 py-6\">\r\n        <div className=\"bg-white rounded-2xl shadow-xl border border-gray-200 overflow-hidden\">\r\n          {/* Messages Container */}\r\n          <div className=\"h-[600px] overflow-y-auto p-6 space-y-4\">\r\n            {messages.map((message) => (\r\n              <div key={message.id} className=\"space-y-4\">\r\n                {/* User Message */}\r\n                {message.isUser && message.content && (\r\n                  <div className=\"flex justify-end\">\r\n                    <div className=\"max-w-xs lg:max-w-md px-4 py-3 rounded-2xl bg-gradient-to-br from-purple-500 to-pink-500 text-white\">\r\n                      <p className=\"text-sm whitespace-pre-wrap\">{message.content}</p>\r\n                      <p className=\"text-xs mt-1 text-purple-100\">\r\n                        {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* AI Message with Restaurant Cards */}\r\n                {!message.isUser && (\r\n                  <div className=\"space-y-4\">\r\n                    {message.content && (\r\n                      <div className=\"flex justify-start\">\r\n                        <div className=\"max-w-xs lg:max-w-md px-4 py-3 rounded-2xl bg-gray-100 text-gray-900\">\r\n                          <p className=\"text-sm whitespace-pre-wrap\">{message.content}</p>\r\n                          <p className=\"text-xs mt-1 text-gray-500\">\r\n                            {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {/* Restaurant Cards */}\r\n                    {message.restaurants && message.restaurants.length > 0 && (\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {message.restaurants.map((restaurant) => (\r\n                          <div key={restaurant.id} className=\"bg-white border border-gray-200 rounded-2xl overflow-hidden shadow-md hover:shadow-lg transition-shadow\">\r\n                            {/* Image */}\r\n                            <div className=\"aspect-video overflow-hidden bg-gray-100\">\r\n                              <img \r\n                                src={restaurant.image} \r\n                                alt={restaurant.name}\r\n                                className=\"w-full h-full object-cover\"\r\n                                onError={(e) => {\r\n                                  const target = e.target as HTMLImageElement;\r\n                                  target.src = \"/Landing.png\";\r\n                                }}\r\n                              />\r\n                            </div>\r\n                            \r\n                            {/* Content */}\r\n                            <div className=\"p-4 space-y-3\">\r\n                              <div>\r\n                                <div className=\"flex items-start justify-between mb-2\">\r\n                                  <div>\r\n                                    <h3 className=\"font-semibold text-gray-900\">{restaurant.name}</h3>\r\n                                    <p className=\"text-sm text-gray-500\">{restaurant.category}</p>\r\n                                  </div>\r\n                                  <div className=\"flex items-center gap-1 text-sm\">\r\n                                    <span className=\"text-yellow-500\">‚≠ê</span>\r\n                                    <span className=\"font-medium\">{restaurant.rating}</span>\r\n                                  </div>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-400\">Closed</p>\r\n                              </div>\r\n                              \r\n                              <div className=\"space-y-2 text-sm text-gray-700\">\r\n                                <div>\r\n                                  <span className=\"font-medium\">üìç Location:</span> {restaurant.location}\r\n                                </div>\r\n                                <div>\r\n                                  <span className=\"font-medium\">‚ú® Vibe:</span> {restaurant.vibe}\r\n                                </div>\r\n                                <div>\r\n                                  <span className=\"font-medium\">üí∞ Price:</span> {restaurant.price_range}\r\n                                </div>\r\n                                {restaurant.menu && restaurant.menu.length > 0 && (\r\n                                  <div>\r\n                                    <span className=\"font-medium\">üçΩÔ∏è Menu:</span> {restaurant.menu.slice(0, 3).join(\", \")}\r\n                                  </div>\r\n                                )}\r\n                                {restaurant.tip && (\r\n                                  <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-2\">\r\n                                    <span className=\"font-medium text-amber-800\">üí° Tip:</span> {restaurant.tip}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                              \r\n                              <button\r\n                                onClick={() => handleViewOnMap(restaurant)}\r\n                                className=\"w-full mt-3 px-4 py-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg hover:opacity-90 transition-opacity text-sm font-medium\"\r\n                              >\r\n                                View on Map\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n            \r\n            {isLoading && (\r\n              <div className=\"flex justify-start\">\r\n                <div className=\"bg-gray-100 text-gray-900 max-w-xs lg:max-w-md px-4 py-3 rounded-2xl\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center\">\r\n                      <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"flex space-x-1\">\r\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\r\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\r\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          {/* Quick Actions */}\r\n          {locationReady && (\r\n            <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200\">\r\n              <p className=\"text-sm text-gray-600 mb-3\">Quick actions:</p>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {quickActions.map((action, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setInputMessage(action)}\r\n                    className=\"px-3 py-1.5 text-xs bg-white border border-gray-300 rounded-full hover:bg-gray-50 transition-colors\"\r\n                  >\r\n                    {action}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Input Area */}\r\n          <div className=\"p-6 bg-white border-t border-gray-200\">\r\n            {!locationReady ? (\r\n              <div className=\"flex items-center justify-center gap-3 py-4\">\r\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-purple-500\"></div>\r\n                <p className=\"text-gray-600\">Getting your location...</p>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {locationError && (\r\n                  <div className=\"mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                    <p className=\"text-sm text-yellow-800\">\r\n                      ‚ö†Ô∏è Location permission denied. Showing results for Manila area. Allow location access for better recommendations.\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                {userLocation && !locationError && (\r\n                  <div className=\"mb-4 p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n                    <p className=\"text-sm text-green-800\">\r\n                      ‚úì Location detected! Finding places near you.\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                <div className=\"flex gap-3\">\r\n                  <div className=\"flex-1 relative\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={inputMessage}\r\n                      onChange={(e) => setInputMessage(e.target.value)}\r\n                      onKeyPress={handleKeyPress}\r\n                      placeholder=\"Ask anything about places, restaurants, or cafes...\"\r\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n                      disabled={isLoading || !locationReady}\r\n                    />\r\n                  </div>\r\n                <button\r\n                    onClick={handleSendMessage}\r\n                    disabled={!inputMessage.trim() || isLoading || !locationReady}\r\n                    className=\"px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl hover:from-purple-600 hover:to-pink-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 flex items-center gap-2\"\r\n                  >\r\n                    {isLoading ? (\r\n                      <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                    ) : (\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n                      </svg>\r\n                    )}\r\n                    Send\r\n                </button>\r\n              </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Features Section */}\r\n        <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-200\">\r\n            <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center mb-4\">\r\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n              </svg>\r\n            </div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Location-Based</h3>\r\n            <p className=\"text-gray-600 text-sm\">Find restaurants and cafes near your current location with precise recommendations.</p>\r\n          </div>\r\n\r\n          <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-200\">\r\n            <div className=\"w-12 h-12 bg-gradient-to-br from-green-500 to-emerald-500 rounded-xl flex items-center justify-center mb-4\">\r\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n            </div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Smart Filtering</h3>\r\n            <p className=\"text-gray-600 text-sm\">Filter by cuisine, price range, features, and preferences to find exactly what you want.</p>\r\n          </div>\r\n\r\n          <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-200\">\r\n            <div className=\"w-12 h-12 bg-gradient-to-br from-orange-500 to-red-500 rounded-xl flex items-center justify-center mb-4\">\r\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\r\n              </svg>\r\n            </div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Personalized</h3>\r\n            <p className=\"text-gray-600 text-sm\">Get recommendations tailored to your preferences, budget, and dining preferences.</p>\r\n          </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}