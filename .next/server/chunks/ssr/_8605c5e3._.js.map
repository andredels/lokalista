{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/lokalista/lib/restaurants.ts"],"sourcesContent":["// Shared restaurant data fetching utilities\r\n\r\n// Get real rating from Google Places API\r\nasync function getRealRating(placeName: string, lat: number, lon: number): Promise<number | null> {\r\n  try {\r\n    // Note: This would require a Google Places API key\r\n    // For now, we'll use intelligent defaults based on known chains\r\n    return getKnownChainRating(placeName);\r\n  } catch (error) {\r\n    console.warn('Could not fetch real rating for:', placeName);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Get rating for known chains based on real-world data\r\nfunction getKnownChainRating(placeName: string): number | null {\r\n  if (!placeName) return null;\r\n  \r\n  const name = placeName.toLowerCase();\r\n  \r\n  // Real-world average ratings for major chains in the Philippines\r\n  const chainRatings: { [key: string]: number } = {\r\n    'jollibee': 4.2,\r\n    'mcdonald': 4.0,\r\n    'kfc': 4.1,\r\n    'starbucks': 4.3,\r\n    'chowking': 4.1,\r\n    'pizza hut': 4.1,\r\n    'subway': 4.0,\r\n    'mang inasal': 4.4,\r\n    'greenwich': 3.9,\r\n    'tokyo tokyo': 4.0,\r\n    'bonchon': 4.4,\r\n    'goldilocks': 4.3,\r\n    'red ribbon': 4.1,\r\n    'yellow cab': 4.2,\r\n    'coffee bean': 4.2,\r\n    'tim hortons': 4.1,\r\n    'dunkin': 4.0,\r\n    'wendy': 4.0,\r\n    'burger king': 3.9,\r\n    'domino': 4.0,\r\n    'papa john': 3.8,\r\n    'shakey': 4.1,\r\n    'max': 4.2,\r\n    'mary grace': 4.3,\r\n    'contis': 4.2,\r\n    'red ribbon': 4.1,\r\n    'goldilocks': 4.3\r\n  };\r\n  \r\n  // Check for exact matches first\r\n  for (const [chain, rating] of Object.entries(chainRatings)) {\r\n    if (name.includes(chain)) {\r\n      return rating;\r\n    }\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n// Intelligent rating based on place characteristics\r\nfunction getIntelligentRating(tags: any, category: string): number {\r\n  let baseRating = 3.5;\r\n  \r\n  // Boost rating for certain amenities\r\n  if (tags.amenity === 'restaurant') {\r\n    baseRating = 3.8;\r\n  } else if (tags.amenity === 'cafe') {\r\n    baseRating = 4.0;\r\n  } else if (tags.amenity === 'fast_food') {\r\n    baseRating = 3.6;\r\n  }\r\n  \r\n  // Boost for established brands\r\n  if (tags.brand) {\r\n    baseRating += 0.3;\r\n  }\r\n  \r\n  // Boost for places with more information (likely more established)\r\n  if (tags.website) baseRating += 0.1;\r\n  if (tags.phone) baseRating += 0.1;\r\n  if (tags.opening_hours) baseRating += 0.1;\r\n  if (tags.cuisine) baseRating += 0.1;\r\n  \r\n  // Add some realistic variation\r\n  const variation = (Math.random() - 0.5) * 0.4; // ¬±0.2 variation\r\n  const finalRating = Math.max(2.5, Math.min(5.0, baseRating + variation));\r\n  \r\n  return Math.round(finalRating * 10) / 10;\r\n}\r\n\r\nexport interface FoodPlace {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  rating: number;\r\n  price_range: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  description: string;\r\n  image_url?: string;\r\n  cuisine_type?: string;\r\n  is_open?: boolean;\r\n  features?: string[];\r\n  distance?: number;\r\n  trend?: string; // For trending indicators\r\n}\r\n\r\nexport async function fetchRealFoodPlaces(centerLatLng: [number, number]): Promise<FoodPlace[]> {\r\n  const [lat, lon] = centerLatLng;\r\n  const radius = 1000; // 1km radius\r\n  \r\n  // OpenStreetMap Overpass API query for restaurants, cafes, and fast food\r\n  const query = `\r\n[out:json][timeout:25];\r\n(\r\n  node[\"amenity\"=\"restaurant\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"cafe\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"fast_food\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"bar\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"pub\"](around:${radius},${lat},${lon});\r\n  node[\"amenity\"=\"food_court\"](around:${radius},${lat},${lon});\r\n  node[\"shop\"=\"bakery\"](around:${radius},${lat},${lon});\r\n  node[\"shop\"=\"confectionery\"](around:${radius},${lat},${lon});\r\n);\r\nout;\r\n`;\r\n\r\n  const response = await fetch('https://overpass-api.de/api/interpreter', {\r\n    method: 'POST',\r\n    body: query,\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  const data = await response.json();\r\n  \r\n  // Transform OpenStreetMap data to our format\r\n  const places: FoodPlace[] = await Promise.all(data.elements.map(async (element: any, index: number) => {\r\n    const tags = element.tags || {};\r\n    \r\n    // Determine category and cuisine type\r\n    let category = 'Restaurant';\r\n    let cuisineType = 'International';\r\n    \r\n    if (tags.amenity === 'cafe') {\r\n      category = 'Cafe';\r\n      cuisineType = 'Coffee';\r\n    } else if (tags.amenity === 'fast_food') {\r\n      category = 'Fast Food';\r\n      cuisineType = 'Fast Food';\r\n    } else if (tags.amenity === 'bar' || tags.amenity === 'pub') {\r\n      category = 'Bar';\r\n      cuisineType = 'International';\r\n    } else if (tags.shop === 'bakery') {\r\n      category = 'Bakery';\r\n      cuisineType = 'Bakery';\r\n    }\r\n    \r\n    // Determine cuisine type from tags\r\n    if (tags.cuisine) {\r\n      cuisineType = tags.cuisine;\r\n    } else if (tags.brand) {\r\n      const brand = tags.brand.toLowerCase();\r\n      if (brand.includes('jollibee') || brand.includes('chowking') || brand.includes('mang inasal')) {\r\n        cuisineType = 'Filipino';\r\n      } else if (brand.includes('mcdonalds') || brand.includes('kfc') || brand.includes('subway')) {\r\n        cuisineType = 'American';\r\n      } else if (brand.includes('starbucks') || brand.includes('coffee bean')) {\r\n        cuisineType = 'Coffee';\r\n      }\r\n    }\r\n    \r\n    // Get real rating from Google Places API or use intelligent defaults\r\n    let rating = await getRealRating(tags.name || tags.brand, element.lat, element.lon);\r\n    \r\n    // Fallback to intelligent rating based on place characteristics\r\n    if (!rating) {\r\n      rating = getIntelligentRating(tags, category);\r\n    }\r\n    \r\n    // Determine price range\r\n    let priceRange = '$$';\r\n    if (tags.amenity === 'cafe' && tags.brand && tags.brand.toLowerCase().includes('starbucks')) {\r\n      priceRange = '$$$';\r\n    } else if (tags.amenity === 'restaurant' && !tags.amenity === 'fast_food') {\r\n      priceRange = Math.random() > 0.5 ? '$$$' : '$$';\r\n    }\r\n    \r\n    return {\r\n      id: `osm_${element.id || index}`,\r\n      name: tags.name || tags.brand || 'Unnamed Place',\r\n      category: category,\r\n      rating: Math.round(rating * 10) / 10,\r\n      price_range: priceRange,\r\n      latitude: element.lat,\r\n      longitude: element.lon,\r\n      description: tags.description || tags.cuisine || category,\r\n      cuisine_type: cuisineType,\r\n      is_open: true\r\n    };\r\n  }));\r\n\r\n  return places;\r\n}\r\n\r\n// Get trending restaurants from real data\r\nexport async function getTrendingRestaurants(centerLatLng: [number, number]): Promise<FoodPlace[]> {\r\n  try {\r\n    const places = await fetchRealFoodPlaces(centerLatLng);\r\n    \r\n    // Sort by rating and take top 8 as trending\r\n    const trending = places\r\n      .sort((a, b) => b.rating - a.rating)\r\n      .slice(0, 8)\r\n      .map((place, index) => ({\r\n        ...place,\r\n        // Add trend indicators based on position\r\n        trend: index === 0 ? 'üî• Hot' : \r\n               index === 1 ? 'üìà Rising' : \r\n               index === 2 ? '‚≠ê Popular' : \r\n               index === 3 ? 'üöÄ Trending' : \r\n               index === 4 ? 'üëë Top' : \r\n               index === 5 ? 'üí´ New' : \r\n               index === 6 ? 'üèÜ Classic' : \r\n               'üéØ Trending'\r\n      }));\r\n    \r\n    return trending;\r\n  } catch (error) {\r\n    console.error('Error fetching trending restaurants:', error);\r\n    return [];\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,4CAA4C;AAE5C,yCAAyC;;;;;;;AACzC,eAAe,cAAc,SAAiB,EAAE,GAAW,EAAE,GAAW;IACtE,IAAI;QACF,mDAAmD;QACnD,gEAAgE;QAChE,OAAO,oBAAoB;IAC7B,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,oCAAoC;QACjD,OAAO;IACT;AACF;AAEA,uDAAuD;AACvD,SAAS,oBAAoB,SAAiB;IAC5C,IAAI,CAAC,WAAW,OAAO;IAEvB,MAAM,OAAO,UAAU,WAAW;IAElC,iEAAiE;IACjE,MAAM,eAA0C;QAC9C,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,aAAa;QACb,YAAY;QACZ,aAAa;QACb,UAAU;QACV,eAAe;QACf,aAAa;QACb,eAAe;QACf,WAAW;QACX,cAAc;QACd,cAAc;QACd,cAAc;QACd,eAAe;QACf,eAAe;QACf,UAAU;QACV,SAAS;QACT,eAAe;QACf,UAAU;QACV,aAAa;QACb,UAAU;QACV,OAAO;QACP,cAAc;QACd,UAAU;QACV,cAAc;QACd,cAAc;IAChB;IAEA,gCAAgC;IAChC,KAAK,MAAM,CAAC,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,cAAe;QAC1D,IAAI,KAAK,QAAQ,CAAC,QAAQ;YACxB,OAAO;QACT;IACF;IAEA,OAAO;AACT;AAEA,oDAAoD;AACpD,SAAS,qBAAqB,IAAS,EAAE,QAAgB;IACvD,IAAI,aAAa;IAEjB,qCAAqC;IACrC,IAAI,KAAK,OAAO,KAAK,cAAc;QACjC,aAAa;IACf,OAAO,IAAI,KAAK,OAAO,KAAK,QAAQ;QAClC,aAAa;IACf,OAAO,IAAI,KAAK,OAAO,KAAK,aAAa;QACvC,aAAa;IACf;IAEA,+BAA+B;IAC/B,IAAI,KAAK,KAAK,EAAE;QACd,cAAc;IAChB;IAEA,mEAAmE;IACnE,IAAI,KAAK,OAAO,EAAE,cAAc;IAChC,IAAI,KAAK,KAAK,EAAE,cAAc;IAC9B,IAAI,KAAK,aAAa,EAAE,cAAc;IACtC,IAAI,KAAK,OAAO,EAAE,cAAc;IAEhC,+BAA+B;IAC/B,MAAM,YAAY,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI,KAAK,iBAAiB;IAChE,MAAM,cAAc,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,aAAa;IAE7D,OAAO,KAAK,KAAK,CAAC,cAAc,MAAM;AACxC;AAmBO,eAAe,oBAAoB,YAA8B;IACtE,MAAM,CAAC,KAAK,IAAI,GAAG;IACnB,MAAM,SAAS,MAAM,aAAa;IAElC,yEAAyE;IACzE,MAAM,QAAQ,CAAC;;;sCAGqB,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI;gCAC7B,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI;qCAClB,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI;+BAC7B,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI;+BACvB,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI;sCAChB,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI;+BAC9B,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI;sCAChB,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI;;;AAG7D,CAAC;IAEC,MAAM,WAAW,MAAM,MAAM,2CAA2C;QACtE,QAAQ;QACR,MAAM;QACN,SAAS;YACP,gBAAgB;QAClB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;IAC1D;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,6CAA6C;IAC7C,MAAM,SAAsB,MAAM,QAAQ,GAAG,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,OAAO,SAAc;QACnF,MAAM,OAAO,QAAQ,IAAI,IAAI,CAAC;QAE9B,sCAAsC;QACtC,IAAI,WAAW;QACf,IAAI,cAAc;QAElB,IAAI,KAAK,OAAO,KAAK,QAAQ;YAC3B,WAAW;YACX,cAAc;QAChB,OAAO,IAAI,KAAK,OAAO,KAAK,aAAa;YACvC,WAAW;YACX,cAAc;QAChB,OAAO,IAAI,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO,KAAK,OAAO;YAC3D,WAAW;YACX,cAAc;QAChB,OAAO,IAAI,KAAK,IAAI,KAAK,UAAU;YACjC,WAAW;YACX,cAAc;QAChB;QAEA,mCAAmC;QACnC,IAAI,KAAK,OAAO,EAAE;YAChB,cAAc,KAAK,OAAO;QAC5B,OAAO,IAAI,KAAK,KAAK,EAAE;YACrB,MAAM,QAAQ,KAAK,KAAK,CAAC,WAAW;YACpC,IAAI,MAAM,QAAQ,CAAC,eAAe,MAAM,QAAQ,CAAC,eAAe,MAAM,QAAQ,CAAC,gBAAgB;gBAC7F,cAAc;YAChB,OAAO,IAAI,MAAM,QAAQ,CAAC,gBAAgB,MAAM,QAAQ,CAAC,UAAU,MAAM,QAAQ,CAAC,WAAW;gBAC3F,cAAc;YAChB,OAAO,IAAI,MAAM,QAAQ,CAAC,gBAAgB,MAAM,QAAQ,CAAC,gBAAgB;gBACvE,cAAc;YAChB;QACF;QAEA,qEAAqE;QACrE,IAAI,SAAS,MAAM,cAAc,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,QAAQ,GAAG,EAAE,QAAQ,GAAG;QAElF,gEAAgE;QAChE,IAAI,CAAC,QAAQ;YACX,SAAS,qBAAqB,MAAM;QACtC;QAEA,wBAAwB;QACxB,IAAI,aAAa;QACjB,IAAI,KAAK,OAAO,KAAK,UAAU,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc;YAC3F,aAAa;QACf,OAAO,IAAI,KAAK,OAAO,KAAK,gBAAgB,CAAC,KAAK,OAAO,KAAK,aAAa;YACzE,aAAa,KAAK,MAAM,KAAK,MAAM,QAAQ;QAC7C;QAEA,OAAO;YACL,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,OAAO;YAChC,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI;YACjC,UAAU;YACV,QAAQ,KAAK,KAAK,CAAC,SAAS,MAAM;YAClC,aAAa;YACb,UAAU,QAAQ,GAAG;YACrB,WAAW,QAAQ,GAAG;YACtB,aAAa,KAAK,WAAW,IAAI,KAAK,OAAO,IAAI;YACjD,cAAc;YACd,SAAS;QACX;IACF;IAEA,OAAO;AACT;AAGO,eAAe,uBAAuB,YAA8B;IACzE,IAAI;QACF,MAAM,SAAS,MAAM,oBAAoB;QAEzC,4CAA4C;QAC5C,MAAM,WAAW,OACd,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,MAAM,GAAG,EAAE,MAAM,EAClC,KAAK,CAAC,GAAG,GACT,GAAG,CAAC,CAAC,OAAO,QAAU,CAAC;gBACtB,GAAG,KAAK;gBACR,yCAAyC;gBACzC,OAAO,UAAU,IAAI,WACd,UAAU,IAAI,cACd,UAAU,IAAI,cACd,UAAU,IAAI,gBACd,UAAU,IAAI,WACd,UAAU,IAAI,WACd,UAAU,IAAI,eACd;YACT,CAAC;QAEH,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wCAAwC;QACtD,OAAO,EAAE;IACX;AACF","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///C:/lokalista/app/map/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useRef, useState, useMemo } from \"react\";\r\nimport { useSearchParams } from \"next/navigation\";\r\nimport { createClient } from \"@/lib/supabase/browserClient\";\r\nimport { fetchRealFoodPlaces, type FoodPlace } from \"@/lib/restaurants\";\r\n\r\n// FoodPlace interface is now imported from lib/restaurants\r\n\r\nexport default function FoodMapPage() {\r\n  const searchParams = useSearchParams();\r\n  const mapEl = useRef<HTMLDivElement | null>(null);\r\n  const mapRef = useRef<any>(null);\r\n  const userMarkerRef = useRef<any>(null);\r\n  const foodMarkersRef = useRef<any[]>([]);\r\n  const initializingRef = useRef<boolean>(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [categoryFilter, setCategoryFilter] = useState(\"\");\r\n  const [featureFilter, setFeatureFilter] = useState(\"\");\r\n  const [loadingLoc, setLoadingLoc] = useState(false);\r\n  const [searching, setSearching] = useState(false);\r\n  const [suggestions, setSuggestions] = useState<Array<{ display: string; lat: number; lon: number }>>([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const debounceRef = useRef<any>(null);\r\n  const [foodPlaces, setFoodPlaces] = useState<FoodPlace[]>([]);\r\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n  const [userLocation, setUserLocation] = useState<[number, number] | null>(null);\r\n  const [selectedPlace, setSelectedPlace] = useState<FoodPlace | null>(null);\r\n  const [nearbyPlaces, setNearbyPlaces] = useState<FoodPlace[]>([]);\r\n  const [clickedLocation, setClickedLocation] = useState<[number, number] | null>(null);\r\n  const [showNearbyPlaces, setShowNearbyPlaces] = useState(false);\r\n  const [clickMarker, setClickMarker] = useState<any>(null);\r\n  const clickMarkersRef = useRef<any[]>([]);\r\n  const restaurantMarkerRef = useRef<any>(null);\r\n  const [currentZoom, setCurrentZoom] = useState<number>(14);\r\n  const [filteredPlaces, setFilteredPlaces] = useState<FoodPlace[]>([]);\r\n  const [mapReady, setMapReady] = useState<boolean>(false);\r\n\r\n  // Initialize Leaflet map with satellite view focused on food places\r\n  useEffect(() => {\r\n    const ensureAssets = async () => {\r\n      if (!document.querySelector('link[data-leaflet-css=\"true\"]')) {\r\n        const link = document.createElement(\"link\");\r\n        link.rel = \"stylesheet\";\r\n        link.href = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\";\r\n        link.setAttribute(\"data-leaflet-css\", \"true\");\r\n        document.head.appendChild(link);\r\n      }\r\n      if (!(window as any).L) {\r\n        await new Promise<void>((resolve) => {\r\n          const script = document.createElement(\"script\");\r\n          script.src = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\";\r\n          script.async = true;\r\n          script.onload = () => resolve();\r\n          document.body.appendChild(script);\r\n        });\r\n      }\r\n    };\r\n\r\n    const init = async () => {\r\n      if (initializingRef.current || mapRef.current) return;\r\n      initializingRef.current = true;\r\n      await ensureAssets();\r\n      const L = (window as any).L;\r\n      if (!mapEl.current) return;\r\n\r\n      // Default to Cebu City center (similar to your reference image)\r\n      const defaultCenter: [number, number] = [10.3157, 123.8854];\r\n      mapRef.current = L.map(mapEl.current, {\r\n        center: defaultCenter,\r\n        zoom: 14,\r\n        zoomControl: true,\r\n        zoomControlOptions: {\r\n          position: 'topleft'\r\n        },\r\n        // Modern map settings for better performance\r\n        preferCanvas: true,\r\n        zoomSnap: 0.25,\r\n        zoomDelta: 0.5,\r\n        wheelPxPerZoomLevel: 120,\r\n        // Enable smooth zooming\r\n        zoomAnimation: true,\r\n        fadeAnimation: true,\r\n        markerZoomAnimation: true,\r\n        // Modern attribution control\r\n        attributionControl: true,\r\n        attributionControlOptions: {\r\n          position: 'bottomright'\r\n        }\r\n      });\r\n\r\n      // Modern high-resolution satellite imagery with latest data\r\n      L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\r\n        maxZoom: 22,\r\n        attribution: '&copy; Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\r\n        subdomains: ['server', 'services'],\r\n      }).addTo(mapRef.current);\r\n\r\n      // Latest street overlay with high detail\r\n      L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\", {\r\n        maxZoom: 22,\r\n        attribution: '&copy; Esri',\r\n        opacity: 0.7,\r\n        subdomains: ['server', 'services'],\r\n      }).addTo(mapRef.current);\r\n\r\n      // Add modern OpenStreetMap layer as alternative (latest data)\r\n      const osmLayer = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n        maxZoom: 19,\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n        subdomains: ['a', 'b', 'c'],\r\n      });\r\n\r\n      // Add layer control for switching between map types\r\n      const baseMaps = {\r\n        \"Satellite\": L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\r\n          maxZoom: 22,\r\n          attribution: '&copy; Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\r\n          subdomains: ['server', 'services'],\r\n        }),\r\n        \"Street Map\": L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n        maxZoom: 19,\r\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n          subdomains: ['a', 'b', 'c'],\r\n        }),\r\n        \"Hybrid\": L.layerGroup([\r\n          L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\r\n            maxZoom: 22,\r\n            attribution: '&copy; Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\r\n            subdomains: ['server', 'services'],\r\n          }),\r\n          L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\", {\r\n            maxZoom: 22,\r\n            attribution: '&copy; Esri',\r\n            opacity: 0.7,\r\n            subdomains: ['server', 'services'],\r\n          })\r\n        ])\r\n      };\r\n\r\n      // Add layer control to map\r\n      L.control.layers(baseMaps, {}, {\r\n        position: 'topright',\r\n        collapsed: true\r\n      }).addTo(mapRef.current);\r\n\r\n      // Track zoom level changes\r\n      mapRef.current.on('zoomend', () => {\r\n        const newZoom = mapRef.current.getZoom();\r\n        setCurrentZoom(newZoom);\r\n        console.log('Zoom level changed to:', newZoom);\r\n        // Re-filter places based on new zoom level\r\n        filterPlacesByZoom(foodPlaces, newZoom);\r\n      });\r\n\r\n      // Ask for geolocation and center\r\n      locateUser();\r\n\r\n      // Click anywhere on map to show nearby places\r\n      mapRef.current.on(\"click\", async (e: any) => {\r\n        const latlng = e.latlng;\r\n        const clickedLatLng: [number, number] = [latlng.lat, latlng.lng];\r\n        console.log('Map clicked at:', clickedLatLng);\r\n        \r\n        // Remove ALL previous click markers\r\n        if (mapRef.current) {\r\n          clickMarkersRef.current.forEach(marker => {\r\n            try {\r\n              mapRef.current.removeLayer(marker);\r\n            } catch (error) {\r\n              console.warn('Error removing click marker:', error);\r\n            }\r\n          });\r\n          clickMarkersRef.current = [];\r\n          setClickMarker(null);\r\n        }\r\n        \r\n        // Add a visual marker for the clicked location\r\n        const L = (window as any).L;\r\n        const clickIcon = L.divIcon({\r\n          html: '<div style=\"background:#ef4444;color:#fff;border-radius:9999px;padding:8px 12px;box-shadow:0 2px 6px rgba(0,0,0,.25);font-weight:bold;font-size:12px\">üìç Clicked</div>',\r\n          className: '', iconSize: [60, 28], iconAnchor: [30, 14]\r\n        });\r\n        \r\n        const newClickMarker = L.marker(clickedLatLng, { icon: clickIcon });\r\n        newClickMarker.addTo(mapRef.current);\r\n        newClickMarker.bindPopup(`Clicked location<br>${clickedLatLng[0].toFixed(6)}, ${clickedLatLng[1].toFixed(6)}`).openPopup();\r\n        \r\n        // Track the new marker\r\n        clickMarkersRef.current.push(newClickMarker);\r\n        setClickMarker(newClickMarker);\r\n        \r\n        // Set loading state for nearby places\r\n        setLoadingPlaces(true);\r\n        setClickedLocation(clickedLatLng);\r\n        setShowNearbyPlaces(true);\r\n        setSelectedPlace(null); // Clear any selected place\r\n        \r\n        try {\r\n          // Fetch new places around the clicked location using Places API\r\n          console.log('Fetching new places for clicked location...');\r\n          const newPlaces = await fetchRealFoodPlaces(clickedLatLng);\r\n          console.log('Found', newPlaces.length, 'new places for clicked location');\r\n          \r\n          // Update the main food places state with the new places\r\n          setFoodPlaces(newPlaces);\r\n          \r\n          // Filter and display places based on current zoom level\r\n          filterPlacesByZoom(newPlaces, currentZoom);\r\n          \r\n          // Find nearby places around the clicked location from the newly fetched places\r\n          const nearby = findNearbyPlaces(clickedLatLng, newPlaces, 1); // 1km radius\r\n          console.log('Found nearby places from new data:', nearby.length);\r\n          setNearbyPlaces(nearby);\r\n          \r\n        } catch (error) {\r\n          console.error(\"Error fetching places for clicked location:\", error);\r\n          // Fallback: find nearby places from existing foodPlaces\r\n          const nearby = findNearbyPlaces(clickedLatLng, foodPlaces, 1);\r\n          console.log('Using fallback nearby places:', nearby.length);\r\n          setNearbyPlaces(nearby);\r\n        } finally {\r\n          setLoadingPlaces(false);\r\n        }\r\n      });\r\n\r\n      // Load initial food places around default center\r\n      setTimeout(() => {\r\n        searchFoodPlaces(defaultCenter);\r\n      }, 1000);\r\n\r\n      initializingRef.current = false;\r\n      \r\n      // Wait a bit longer to ensure map is fully ready\r\n      setTimeout(() => {\r\n        setMapReady(true); // Map is now ready!\r\n      }, 500);\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      if (mapRef.current) {\r\n        // Clean up ALL click markers\r\n        clickMarkersRef.current.forEach(marker => {\r\n          try {\r\n            mapRef.current.removeLayer(marker);\r\n          } catch (error) {\r\n            console.warn('Error removing click marker during cleanup:', error);\r\n          }\r\n        });\r\n        clickMarkersRef.current = [];\r\n        \r\n        mapRef.current.remove();\r\n        mapRef.current = null;\r\n      }\r\n      setMapReady(false);\r\n    };\r\n  }, []);\r\n\r\n  // Handle URL parameters for restaurant navigation\r\n  useEffect(() => {\r\n    // Wait for map to be ready before processing URL params\r\n    if (!mapRef.current || !mapReady) return;\r\n    \r\n    const lat = searchParams.get('lat');\r\n    const lng = searchParams.get('lng');\r\n    const restaurant = searchParams.get('restaurant');\r\n    \r\n    if (lat && lng) {\r\n      const coordinates: [number, number] = [parseFloat(lat), parseFloat(lng)];\r\n      console.log('Centering map on restaurant:', restaurant, 'at', coordinates);\r\n      \r\n      // Remove previous marker if exists\r\n      if (restaurantMarkerRef.current) {\r\n        try {\r\n          mapRef.current.removeLayer(restaurantMarkerRef.current);\r\n        } catch (error) {\r\n          console.warn('Error removing previous marker:', error);\r\n        }\r\n      }\r\n      \r\n      // Get user's current location first\r\n      if ('geolocation' in navigator) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const userCoords: [number, number] = [position.coords.latitude, position.coords.longitude];\r\n            \r\n            // Add \"You are here\" marker at user's location\r\n            const L = (window as any).L;\r\n            if (L) {\r\n              const youIcon = L.divIcon({\r\n                html: '<div style=\"background:#ef4444;color:#fff;border-radius:9999px;padding:6px 10px;box-shadow:0 2px 6px rgba(0,0,0,.25);font-weight:bold\">üìç You are here</div>',\r\n                className: '',\r\n                iconSize: [50, 24],\r\n                iconAnchor: [25, 12]\r\n              });\r\n              \r\n              if (!userMarkerRef.current) {\r\n                userMarkerRef.current = L.marker(userCoords, { icon: youIcon });\r\n                userMarkerRef.current.addTo(mapRef.current);\r\n                setUserLocation(userCoords);\r\n              }\r\n              \r\n              // Calculate distance\r\n              const distance = calculateDistance(userCoords[0], userCoords[1], coordinates[0], coordinates[1]);\r\n              \r\n              // Center map to show both user and restaurant\r\n              const bounds = L.latLngBounds([userCoords, coordinates]);\r\n              mapRef.current.fitBounds(bounds, { padding: [50, 50] });\r\n              \r\n              // Add restaurant marker\r\n              const restaurantIcon = L.divIcon({\r\n                html: `<div style=\"background:#8c52ff;color:#fff;border-radius:9999px;padding:8px 12px;box-shadow:0 2px 6px rgba(0,0,0,.25);font-weight:bold;font-size:12px;border:3px solid white\">üìç ${restaurant || 'Restaurant'}</div>`,\r\n                className: '',\r\n                iconSize: [80, 32],\r\n                iconAnchor: [40, 16]\r\n              });\r\n              \r\n              restaurantMarkerRef.current = L.marker(coordinates, { icon: restaurantIcon });\r\n              restaurantMarkerRef.current.addTo(mapRef.current);\r\n              \r\n              // Show popup with distance\r\n              setTimeout(() => {\r\n                restaurantMarkerRef.current?.bindPopup(`\r\n                  <div style=\"text-align: center; padding: 8px;\">\r\n                    <h3 style=\"margin: 0 0 8px 0; color: #8c52ff; font-weight: bold;\">${restaurant || 'Selected Restaurant'}</h3>\r\n                    <p style=\"margin: 0; color: #666; font-size: 14px; margin-bottom: 4px;\">${distance.toFixed(2)} km away</p>\r\n                    <p style=\"margin: 0; color: #666; font-size: 14px;\">Click on the map to explore nearby places!</p>\r\n                  </div>\r\n                `).openPopup();\r\n              }, 1600);\r\n              \r\n              // Search for food places around the restaurant\r\n              setTimeout(() => {\r\n                searchFoodPlaces(coordinates);\r\n              }, 2000);\r\n            }\r\n          },\r\n          (error) => {\r\n            console.warn('Could not get user location:', error);\r\n            \r\n            // If location denied, just show restaurant\r\n            const L = (window as any).L;\r\n            if (L) {\r\n              // Center map on the restaurant location\r\n              mapRef.current.setView(coordinates, 18, { animate: true, duration: 1.5 });\r\n              \r\n              // Add restaurant marker\r\n              const restaurantIcon = L.divIcon({\r\n                html: `<div style=\"background:#8c52ff;color:#fff;border-radius:9999px;padding:8px 12px;box-shadow:0 2px 6px rgba(0,0,0,.25);font-weight:bold;font-size:12px;border:3px solid white\">üìç ${restaurant || 'Restaurant'}</div>`,\r\n                className: '',\r\n                iconSize: [80, 32],\r\n                iconAnchor: [40, 16]\r\n              });\r\n              \r\n              restaurantMarkerRef.current = L.marker(coordinates, { icon: restaurantIcon });\r\n              restaurantMarkerRef.current.addTo(mapRef.current);\r\n              \r\n              setTimeout(() => {\r\n                restaurantMarkerRef.current?.bindPopup(`\r\n                  <div style=\"text-align: center; padding: 8px;\">\r\n                    <h3 style=\"margin: 0 0 8px 0; color: #8c52ff; font-weight: bold;\">${restaurant || 'Selected Restaurant'}</h3>\r\n                    <p style=\"margin: 0; color: #666; font-size: 14px;\">Click on the map to explore nearby places!</p>\r\n                  </div>\r\n                `).openPopup();\r\n              }, 1600);\r\n              \r\n              // Search for food places around the restaurant\r\n              setTimeout(() => {\r\n                searchFoodPlaces(coordinates);\r\n              }, 2000);\r\n            }\r\n          }\r\n        );\r\n      }\r\n      \r\n      // Calculate distance function\r\n      function calculateDistance(lat1: number, lon1: number, lat2: number, lon2: number): number {\r\n        const R = 6371; // Earth's radius in kilometers\r\n        const dLat = (lat2 - lat1) * Math.PI / 180;\r\n        const dLon = (lon2 - lon1) * Math.PI / 180;\r\n        const a =\r\n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n          Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\r\n          Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n        return R * c;\r\n      }\r\n    }\r\n    \r\n    // Clean up when params change\r\n    return () => {\r\n      if (restaurantMarkerRef.current && mapRef.current) {\r\n        try {\r\n          mapRef.current.removeLayer(restaurantMarkerRef.current);\r\n          restaurantMarkerRef.current = null;\r\n        } catch (error) {\r\n          console.warn('Error removing restaurant marker:', error);\r\n        }\r\n      }\r\n    };\r\n  }, [searchParams, mapReady]);\r\n\r\n  async function locateUser() {\r\n    if (!mapRef.current) return;\r\n    if (!(\"geolocation\" in navigator)) return;\r\n    try {\r\n      setLoadingLoc(true);\r\n      const pos = await new Promise<GeolocationPosition>((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n          enableHighAccuracy: true,\r\n          timeout: 15000,\r\n          maximumAge: 10000,\r\n        });\r\n      });\r\n      const latlng: [number, number] = [pos.coords.latitude, pos.coords.longitude];\r\n      setUserLocation(latlng);\r\n      \r\n      const L = (window as any).L;\r\n      if (userMarkerRef.current) {\r\n        userMarkerRef.current.setLatLng(latlng);\r\n      } else {\r\n        const youIcon = L.divIcon({\r\n          html: '<div style=\"background:#ef4444;color:#fff;border-radius:9999px;padding:6px 10px;box-shadow:0 2px 6px rgba(0,0,0,.25);font-weight:bold\">üìç You</div>',\r\n          className: '', iconSize: [50, 24], iconAnchor: [25, 12]\r\n        });\r\n        userMarkerRef.current = L.marker(latlng, { icon: youIcon });\r\n        userMarkerRef.current.addTo(mapRef.current);\r\n      }\r\n      mapRef.current.setView(latlng, 15);\r\n      userMarkerRef.current.bindPopup(\"You are here\").openPopup();\r\n      \r\n      // Don't auto-search - let user click \"Search Food Places\" button instead\r\n    } catch (_) {\r\n      // ignore; user may deny permission\r\n    } finally {\r\n      setLoadingLoc(false);\r\n    }\r\n  }\r\n\r\n  // Fixed sample food places data for demonstration (Cebu City area)\r\n  const getSampleFoodPlaces = (centerLatLng: [number, number]) => {\r\n    // Use fixed coordinates around Cebu City instead of relative to click\r\n    const samplePlaces: FoodPlace[] = [\r\n      {\r\n        id: \"1\",\r\n        name: \"Jollibee\",\r\n        category: \"Fast Foods\",\r\n        rating: 4.2,\r\n        price_range: \"$$\",\r\n        latitude: 10.3157,\r\n        longitude: 123.8854,\r\n        description: \"Popular Filipino fast food chain\",\r\n        cuisine_type: \"Local Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"McDonald's\",\r\n        category: \"Fast Foods\",\r\n        rating: 4.0,\r\n        price_range: \"$$\",\r\n        latitude: 10.3167,\r\n        longitude: 123.8864,\r\n        description: \"International fast food chain\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\", \"Open 24 Hours\"]\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"Starbucks Coffee\",\r\n        category: \"Cafes\",\r\n        rating: 4.3,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3147,\r\n        longitude: 123.8844,\r\n        description: \"Premium coffee and pastries\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Pet-Friendly\"]\r\n      },\r\n      {\r\n        id: \"4\",\r\n        name: \"Chowking\",\r\n        category: \"Local Cuisine\",\r\n        rating: 4.1,\r\n        price_range: \"$$\",\r\n        latitude: 10.3177,\r\n        longitude: 123.8874,\r\n        description: \"Chinese-Filipino cuisine\",\r\n        cuisine_type: \"Local Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"5\",\r\n        name: \"KFC\",\r\n        category: \"Fast Foods\",\r\n        rating: 4.0,\r\n        price_range: \"$$\",\r\n        latitude: 10.3137,\r\n        longitude: 123.8834,\r\n        description: \"Fried chicken and sides\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"6\",\r\n        name: \"Greenwich Pizza\",\r\n        category: \"Fast Foods\",\r\n        rating: 3.9,\r\n        price_range: \"$$\",\r\n        latitude: 10.3187,\r\n        longitude: 123.8884,\r\n        description: \"Pizza and pasta\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"7\",\r\n        name: \"Mang Inasal\",\r\n        category: \"Local Cuisine\",\r\n        rating: 4.4,\r\n        price_range: \"$$\",\r\n        latitude: 10.3127,\r\n        longitude: 123.8824,\r\n        description: \"Grilled chicken and Filipino dishes\",\r\n        cuisine_type: \"Local Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"8\",\r\n        name: \"Coffee Bean & Tea Leaf\",\r\n        category: \"Cafes\",\r\n        rating: 4.2,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3197,\r\n        longitude: 123.8894,\r\n        description: \"Coffee, tea, and light meals\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Pet-Friendly\"]\r\n      },\r\n      {\r\n        id: \"9\",\r\n        name: \"Pizza Hut\",\r\n        category: \"Fine Dining\",\r\n        rating: 4.1,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3117,\r\n        longitude: 123.8814,\r\n        description: \"Pizza, pasta, and wings\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"10\",\r\n        name: \"Subway\",\r\n        category: \"Fast Foods\",\r\n        rating: 4.0,\r\n        price_range: \"$$\",\r\n        latitude: 10.3207,\r\n        longitude: 123.8904,\r\n        description: \"Fresh sandwiches and salads\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"11\",\r\n        name: \"Goldilocks\",\r\n        category: \"Bakeries/Pastries\",\r\n        rating: 4.3,\r\n        price_range: \"$$\",\r\n        latitude: 10.3107,\r\n        longitude: 123.8804,\r\n        description: \"Filipino bakery and cakes\",\r\n        cuisine_type: \"Local Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"12\",\r\n        name: \"Red Ribbon\",\r\n        category: \"Bakeries/Pastries\",\r\n        rating: 4.1,\r\n        price_range: \"$$\",\r\n        latitude: 10.3217,\r\n        longitude: 123.8914,\r\n        description: \"Cakes and pastries\",\r\n        cuisine_type: \"Local Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"13\",\r\n        name: \"Yellow Cab Pizza\",\r\n        category: \"Fine Dining\",\r\n        rating: 4.2,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3097,\r\n        longitude: 123.8794,\r\n        description: \"New York style pizza\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"14\",\r\n        name: \"Tokyo Tokyo\",\r\n        category: \"Fast Foods\",\r\n        rating: 4.0,\r\n        price_range: \"$$\",\r\n        latitude: 10.3227,\r\n        longitude: 123.8924,\r\n        description: \"Japanese fast food\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\r\n      },\r\n      {\r\n        id: \"15\",\r\n        name: \"Bonchon\",\r\n        category: \"Fine Dining\",\r\n        rating: 4.4,\r\n        price_range: \"$$$\",\r\n        latitude: 10.3087,\r\n        longitude: 123.8784,\r\n        description: \"Korean fried chicken\",\r\n        cuisine_type: \"International Cuisine\",\r\n        is_open: true,\r\n        features: [\"Family-Friendly\"]\r\n      }\r\n    ];\r\n\r\n    // Filter by category if selected\r\n    let filtered = samplePlaces;\r\n    if (categoryFilter) {\r\n      filtered = filtered.filter(place => \r\n        place.category === categoryFilter\r\n      );\r\n    }\r\n\r\n    // Filter by features if selected\r\n    if (featureFilter) {\r\n      filtered = filtered.filter(place => \r\n        place.features?.includes(featureFilter)\r\n      );\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  async function searchFoodPlaces(centerLatLng: [number, number]) {\r\n    setLoadingPlaces(true);\r\n    try {\r\n      console.log(\"Searching for real food places at:\", centerLatLng);\r\n      \r\n      // Use OpenStreetMap Overpass API for real restaurant data\r\n      const places = await fetchRealFoodPlaces(centerLatLng);\r\n      \r\n      console.log(\"Found\", places.length, \"real places\");\r\n      setFoodPlaces(places);\r\n      \r\n      // Filter places based on current zoom level\r\n      filterPlacesByZoom(places, currentZoom);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error fetching food places:\", error);\r\n      // Fallback to sample data if real data fails\r\n      console.log(\"Falling back to sample data\");\r\n      const places = getSampleFoodPlaces(centerLatLng);\r\n      setFoodPlaces(places);\r\n      \r\n      // Filter places based on current zoom level\r\n      filterPlacesByZoom(places, currentZoom);\r\n    } finally {\r\n      setLoadingPlaces(false);\r\n    }\r\n  }\r\n\r\n  // Load initial food places only once\r\n  const loadInitialFoodPlaces = useMemo(() => {\r\n    return () => {\r\n      searchFoodPlaces(defaultCenter);\r\n    };\r\n  }, []);\r\n\r\n\r\n  function plotFoodMarkers(places: FoodPlace[]) {\r\n    const L = (window as any).L;\r\n    \r\n    // Check if Leaflet is loaded and map is ready\r\n    if (!L || !mapRef.current) {\r\n      console.log(\"Leaflet not loaded or map not ready yet\");\r\n      return;\r\n    }\r\n    \r\n    // Clear existing food markers and custom popups\r\n    foodMarkersRef.current.forEach(marker => {\r\n      try { \r\n        // Call cleanup function if it exists\r\n        if ((marker as any).cleanup) {\r\n          (marker as any).cleanup();\r\n        }\r\n        marker.remove(); \r\n      } catch {}\r\n    });\r\n    foodMarkersRef.current = [];\r\n    \r\n    // Also remove any remaining custom popups\r\n    const customPopups = document.querySelectorAll('.custom-popup');\r\n    customPopups.forEach(popup => popup.remove());\r\n\r\n    console.log(\"Plotting\", places.length, \"food places\");\r\n\r\n    // Add markers for each food place with modern styling\r\n    places.forEach((place) => {\r\n      const getCategoryIcon = (category: string) => {\r\n        const cat = category.toLowerCase();\r\n        if (cat.includes(\"restaurant\") || cat.includes(\"food\")) return \"üçΩÔ∏è\";\r\n        if (cat.includes(\"cafe\") || cat.includes(\"coffee\")) return \"‚òï\";\r\n        if (cat.includes(\"bar\")) return \"üç∫\";\r\n        if (cat.includes(\"fast\")) return \"üçî\";\r\n        if (cat.includes(\"pizza\")) return \"üçï\";\r\n        if (cat.includes(\"bakery\")) return \"ü•ñ\";\r\n        return \"üç¥\";\r\n      };\r\n\r\n      const getCategoryColor = (category: string) => {\r\n        const cat = category.toLowerCase();\r\n        if (cat.includes(\"cafe\") || cat.includes(\"coffee\")) return \"#059669\";\r\n        if (cat.includes(\"fast\")) return \"#dc2626\";\r\n        if (cat.includes(\"bar\")) return \"#7c3aed\";\r\n        if (cat.includes(\"bakery\")) return \"#d97706\";\r\n        return \"#8c52ff\";\r\n      };\r\n\r\n      const iconHtml = `\r\n        <div style=\"\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n          background: linear-gradient(135deg, ${getCategoryColor(place.category)}, ${getCategoryColor(place.category)}dd);\r\n          color: #fff;\r\n          border-radius: 25px;\r\n          padding: 8px 14px;\r\n          box-shadow: 0 6px 20px rgba(0,0,0,0.25);\r\n          font-size: 13px;\r\n          font-weight: 700;\r\n          border: 3px solid #fff;\r\n          cursor: pointer;\r\n          min-width: 60px;\r\n          justify-content: center;\r\n        \">\r\n          <span style=\"font-size: 16px;\">${getCategoryIcon(place.category)}</span>\r\n          <span>${place.rating ? place.rating.toFixed(1) : \"‚òÖ\"}</span>\r\n        </div>\r\n      `;\r\n\r\n      const customIcon = L.divIcon({ \r\n        html: iconHtml, \r\n        className: \"modern-food-marker\", \r\n        iconSize: [80, 35], \r\n        iconAnchor: [40, 17.5],\r\n        popupAnchor: [0, -25]\r\n      });\r\n\r\n      const marker = L.marker([place.latitude, place.longitude], { \r\n        icon: customIcon\r\n      });\r\n      \r\n      // Modern popup with better styling\r\n      const popupContent = `\r\n        <div style=\"min-width: 240px; font-family: system-ui, -apple-system, sans-serif; padding: 4px;\">\r\n          <div style=\"display: flex; align-items: center; gap: 10px; margin-bottom: 10px;\">\r\n            <span style=\"font-size: 20px;\">${getCategoryIcon(place.category)}</span>\r\n            <div>\r\n              <h3 style=\"margin: 0; font-size: 16px; font-weight: 700; color: #111827; line-height: 1.2;\">${place.name}</h3>\r\n              <p style=\"margin: 2px 0 0 0; font-size: 13px; color: #6b7280; font-weight: 500;\">${place.category}</p>\r\n            </div>\r\n          </div>\r\n          <div style=\"display: flex; align-items: center; gap: 6px; margin-bottom: 10px; flex-wrap: wrap;\">\r\n            <div style=\"display: flex; align-items: center; gap: 2px; background: #fef3c7; padding: 3px 8px; border-radius: 12px;\">\r\n              <span style=\"color: #f59e0b; font-size: 12px;\">‚≠ê</span>\r\n              <span style=\"font-weight: 600; font-size: 12px; color: #92400e;\">${place.rating ? place.rating.toFixed(1) : \"N/A\"}</span>\r\n            </div>\r\n            ${place.price_range ? `\r\n            <div style=\"background: #e0e7ff; padding: 3px 8px; border-radius: 12px;\">\r\n              <span style=\"color: #3730a3; font-size: 12px; font-weight: 500;\">${place.price_range}</span>\r\n            </div>\r\n            ` : ''}\r\n            ${place.cuisine_type ? `\r\n            <div style=\"background: #f3f4f6; padding: 3px 8px; border-radius: 12px;\">\r\n              <span style=\"color: #374151; font-size: 12px; font-weight: 500;\">${place.cuisine_type}</span>\r\n            </div>\r\n            ` : ''}\r\n          </div>\r\n          ${place.description ? `\r\n          <p style=\"margin: 0; font-size: 14px; color: #4b5563; line-height: 1.4; margin-bottom: 10px;\">${place.description}</p>\r\n          ` : ''}\r\n          <div style=\"padding-top: 8px; border-top: 1px solid #e5e7eb;\">\r\n            <div style=\"display: flex; align-items: center; gap: 4px; font-size: 11px; color: #9ca3af;\">\r\n              <span>üìç</span>\r\n              <span>${place.latitude.toFixed(6)}, ${place.longitude.toFixed(6)}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      \r\n      // Create a custom popup element that won't interfere with hover detection\r\n      const popupElement = document.createElement('div');\r\n      popupElement.innerHTML = popupContent;\r\n      popupElement.className = 'custom-popup';\r\n      popupElement.style.cssText = `\r\n        position: absolute;\r\n        background: white;\r\n        border: 1px solid #e5e7eb;\r\n        border-radius: 12px;\r\n        box-shadow: 0 10px 25px rgba(0,0,0,0.15);\r\n        padding: 0;\r\n        z-index: 1000;\r\n        pointer-events: none;\r\n        opacity: 0;\r\n        transform: translateY(10px);\r\n        transition: all 0.2s ease;\r\n        min-width: 240px;\r\n        max-width: 300px;\r\n      `;\r\n      \r\n      // Add popup to map container\r\n      if (mapRef.current) {\r\n        mapRef.current.getContainer().appendChild(popupElement);\r\n      }\r\n      \r\n      // Position popup relative to marker with improved accuracy\r\n      const updatePopupPosition = () => {\r\n        if (mapRef.current && popupElement) {\r\n          try {\r\n            const markerPoint = mapRef.current.latLngToContainerPoint([place.latitude, place.longitude]);\r\n            const containerRect = mapRef.current.getContainer().getBoundingClientRect();\r\n            \r\n            // Get actual popup dimensions\r\n            const popupRect = popupElement.getBoundingClientRect();\r\n            const popupWidth = popupRect.width || 240; // fallback to min-width\r\n            const popupHeight = popupRect.height || 120; // fallback to estimated height\r\n            \r\n            // Calculate position relative to the map container\r\n            const offsetX = markerPoint.x - (popupWidth / 2);\r\n            const offsetY = markerPoint.y - popupHeight - 25; // 25px above marker\r\n            \r\n            // Ensure popup stays within map bounds with padding\r\n            const padding = 10;\r\n            const left = Math.max(padding, Math.min(offsetX, containerRect.width - popupWidth - padding));\r\n            const top = Math.max(padding, Math.min(offsetY, containerRect.height - popupHeight - padding));\r\n            \r\n            // Only update if position actually changed to avoid unnecessary reflows\r\n            const currentLeft = parseFloat(popupElement.style.left) || 0;\r\n            const currentTop = parseFloat(popupElement.style.top) || 0;\r\n            \r\n            if (Math.abs(currentLeft - left) > 1 || Math.abs(currentTop - top) > 1) {\r\n              popupElement.style.left = left + 'px';\r\n              popupElement.style.top = top + 'px';\r\n            }\r\n          } catch (error) {\r\n            console.warn('Error updating popup position:', error);\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Add hover effects with custom popup\r\n      let hoverTimeout: NodeJS.Timeout;\r\n      let isHovering = false;\r\n      let isPopupVisible = false;\r\n      \r\n      marker.on('mouseover', function() {\r\n        clearTimeout(hoverTimeout);\r\n        isHovering = true;\r\n        if (!isPopupVisible) {\r\n          updatePopupPosition();\r\n          popupElement.style.opacity = '1';\r\n          popupElement.style.transform = 'translateY(0)';\r\n          isPopupVisible = true;\r\n        }\r\n      });\r\n      \r\n      marker.on('mouseout', function() {\r\n        isHovering = false;\r\n        hoverTimeout = setTimeout(() => {\r\n          if (!isHovering && isPopupVisible) {\r\n            popupElement.style.opacity = '0';\r\n            popupElement.style.transform = 'translateY(10px)';\r\n            isPopupVisible = false;\r\n          }\r\n        }, 150);\r\n      });\r\n      \r\n      // Update popup position on map events with throttling\r\n      let positionUpdateTimeout: NodeJS.Timeout;\r\n      const throttledUpdatePosition = () => {\r\n        clearTimeout(positionUpdateTimeout);\r\n        positionUpdateTimeout = setTimeout(() => {\r\n          if (isPopupVisible) {\r\n            updatePopupPosition();\r\n          }\r\n        }, 16); // ~60fps\r\n      };\r\n      \r\n      // Update popup position on map move/zoom\r\n      if (mapRef.current) {\r\n        mapRef.current.on('move', throttledUpdatePosition);\r\n        mapRef.current.on('zoom', throttledUpdatePosition);\r\n        mapRef.current.on('moveend', updatePopupPosition);\r\n        mapRef.current.on('zoomend', updatePopupPosition);\r\n      }\r\n      \r\n      marker.on('click', () => setSelectedPlace(place));\r\n      \r\n      // Store cleanup function for this marker\r\n      (marker as any).cleanup = () => {\r\n        if (popupElement && popupElement.parentNode) {\r\n          popupElement.parentNode.removeChild(popupElement);\r\n        }\r\n        if (mapRef.current) {\r\n          mapRef.current.off('move', throttledUpdatePosition);\r\n          mapRef.current.off('zoom', throttledUpdatePosition);\r\n          mapRef.current.off('moveend', updatePopupPosition);\r\n          mapRef.current.off('zoomend', updatePopupPosition);\r\n        }\r\n      };\r\n      \r\n      marker.addTo(mapRef.current);\r\n      foodMarkersRef.current.push(marker);\r\n    });\r\n  }\r\n\r\n  async function geocodeSearch(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    if (!query.trim()) return;\r\n    setSearching(true);\r\n    try {\r\n      // Restrict to Philippines results where possible\r\n      const url = `https://nominatim.openstreetmap.org/search?format=json&countrycodes=ph&limit=5&q=${encodeURIComponent(query)}`;\r\n      const res = await fetch(url, { headers: { \"Accept-Language\": \"en\" } });\r\n      const data = await res.json();\r\n      if (data && data.length > 0) {\r\n        const best = data[0];\r\n        const lat = parseFloat(best.lat);\r\n        const lon = parseFloat(best.lon);\r\n        const latlng: [number, number] = [lat, lon];\r\n        \r\n        // Center map on search result\r\n        mapRef.current.setView(latlng, 15);\r\n        // Only search for food places when explicitly searching for a location\r\n        searchFoodPlaces(latlng);\r\n        \r\n        setSuggestions(\r\n          data.map((d: any) => ({ display: d.display_name, lat: parseFloat(d.lat), lon: parseFloat(d.lon) }))\r\n        );\r\n        setShowSuggestions(true);\r\n      } else {\r\n        setSuggestions([]);\r\n        setShowSuggestions(false);\r\n        alert(\"No results found in the Philippines.\");\r\n      }\r\n    } finally {\r\n      setSearching(false);\r\n    }\r\n  }\r\n\r\n  // Live suggestions with debounce on input change\r\n  function onQueryChange(v: string) {\r\n    setQuery(v);\r\n    if (debounceRef.current) clearTimeout(debounceRef.current);\r\n    if (!v.trim()) {\r\n      setSuggestions([]);\r\n      setShowSuggestions(false);\r\n      return;\r\n    }\r\n    debounceRef.current = setTimeout(async () => {\r\n      try {\r\n        const url = `https://nominatim.openstreetmap.org/search?format=json&countrycodes=ph&limit=5&q=${encodeURIComponent(v)}`;\r\n        const res = await fetch(url, { headers: { \"Accept-Language\": \"en\" } });\r\n        const data = await res.json();\r\n        setSuggestions((data || []).map((d: any) => ({ display: d.display_name, lat: parseFloat(d.lat), lon: parseFloat(d.lon) })));\r\n        setShowSuggestions(true);\r\n      } catch {\r\n        // ignore\r\n      }\r\n    }, 400);\r\n  }\r\n\r\n\r\n  // Calculate distance between two points using Haversine formula\r\n  const calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\r\n    const R = 6371; // Earth's radius in kilometers\r\n    const dLat = (lat2 - lat1) * Math.PI / 180;\r\n    const dLon = (lon2 - lon1) * Math.PI / 180;\r\n    const a = \r\n      Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \r\n      Math.sin(dLon/2) * Math.sin(dLon/2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    return R * c; // Distance in kilometers\r\n  };\r\n\r\n  // Filter places based on zoom level and rating\r\n  const filterPlacesByZoom = (places: FoodPlace[], zoom: number) => {\r\n    console.log(`Filtering ${places.length} places at zoom level ${zoom}`);\r\n    \r\n    let filtered: FoodPlace[];\r\n    \r\n    if (zoom <= 12) {\r\n      // Zoomed out: Show only highly rated, well-known places (max 10)\r\n      const wellKnownAndRated = places.filter(place => {\r\n        // Well-known chains and highly rated places\r\n        const isWellKnown = place.name && (\r\n          place.name.toLowerCase().includes('jollibee') ||\r\n          place.name.toLowerCase().includes('mcdonald') ||\r\n          place.name.toLowerCase().includes('kfc') ||\r\n          place.name.toLowerCase().includes('starbucks') ||\r\n          place.name.toLowerCase().includes('chowking') ||\r\n          place.name.toLowerCase().includes('pizza hut') ||\r\n          place.name.toLowerCase().includes('subway') ||\r\n          place.name.toLowerCase().includes('mang inasal') ||\r\n          place.name.toLowerCase().includes('greenwich') ||\r\n          place.name.toLowerCase().includes('tokyo tokyo') ||\r\n          place.name.toLowerCase().includes('bonchon') ||\r\n          place.name.toLowerCase().includes('goldilocks') ||\r\n          place.name.toLowerCase().includes('red ribbon') ||\r\n          place.name.toLowerCase().includes('yellow cab') ||\r\n          place.name.toLowerCase().includes('coffee bean')\r\n        );\r\n        \r\n        // High rating threshold for independent places\r\n        const isHighlyRated = place.rating && place.rating >= 4.2;\r\n        \r\n        return isWellKnown || isHighlyRated;\r\n      });\r\n      \r\n      // Sort by rating (highest first) and limit to 10\r\n      filtered = wellKnownAndRated\r\n        .sort((a, b) => (b.rating || 0) - (a.rating || 0))\r\n        .slice(0, 10);\r\n      \r\n      console.log(`Zoomed out: Showing ${filtered.length} well-known/highly-rated places (max 10)`);\r\n    } else if (zoom <= 15) {\r\n      // Medium zoom: Show places with rating >= 3.8 (max 20)\r\n      const mediumRated = places.filter(place => \r\n        !place.rating || place.rating >= 3.8\r\n      );\r\n      \r\n      // Sort by rating and limit to 20\r\n      filtered = mediumRated\r\n        .sort((a, b) => (b.rating || 0) - (a.rating || 0))\r\n        .slice(0, 20);\r\n      \r\n      console.log(`Medium zoom: Showing ${filtered.length} places with rating >= 3.8 (max 20)`);\r\n    } else {\r\n      // Zoomed in: Show all places (no limit)\r\n      filtered = places;\r\n      console.log(`Zoomed in: Showing all ${filtered.length} places`);\r\n    }\r\n    \r\n    setFilteredPlaces(filtered);\r\n    \r\n    // Update markers on map\r\n    setTimeout(() => {\r\n      plotFoodMarkers(filtered);\r\n    }, 100);\r\n  };\r\n\r\n  // Find nearby places within a specified radius from a clicked location\r\n  const findNearbyPlaces = (clickedLatLng: [number, number], allPlaces: FoodPlace[], radiusKm: number = 1): FoodPlace[] => {\r\n    const [clickLat, clickLon] = clickedLatLng;\r\n    \r\n    return allPlaces\r\n      .map(place => ({\r\n        ...place,\r\n        distance: calculateDistance(\r\n          clickLat,\r\n          clickLon,\r\n          place.latitude,\r\n          place.longitude\r\n        )\r\n      }))\r\n      .filter(place => place.distance <= radiusKm)\r\n      .sort((a, b) => a.distance - b.distance) // Sort by distance\r\n      .slice(0, 15); // Limit to 15 nearby places\r\n  };\r\n\r\n  // Test function to verify sample data works\r\n  useEffect(() => {\r\n    console.log(\"Food places state:\", foodPlaces);\r\n  }, [foodPlaces]);\r\n\r\n  // Filter places when foodPlaces or currentZoom changes\r\n  useEffect(() => {\r\n    if (foodPlaces.length > 0) {\r\n      filterPlacesByZoom(foodPlaces, currentZoom);\r\n    }\r\n  }, [foodPlaces, currentZoom]);\r\n\r\n  // Filter food places when filters change\r\n  useEffect(() => {\r\n    if (mapRef.current && foodPlaces.length > 0) {\r\n      const filteredPlaces = getSampleFoodPlaces([10.3157, 123.8854]);\r\n      setFoodPlaces(filteredPlaces);\r\n      plotFoodMarkers(filteredPlaces);\r\n    }\r\n  }, [categoryFilter, featureFilter]);\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Custom CSS for modern map styling */}\r\n      <style jsx global>{`\r\n        .modern-food-marker {\r\n          transition: box-shadow 0.2s ease !important;\r\n          position: relative !important;\r\n        }\r\n        \r\n        .modern-food-marker:hover {\r\n          box-shadow: 0 8px 25px rgba(0,0,0,0.35) !important;\r\n          transform: none !important;\r\n        }\r\n        \r\n        .leaflet-marker-icon {\r\n          position: absolute !important;\r\n        }\r\n        \r\n        .leaflet-marker-icon:hover {\r\n          z-index: 1000 !important;\r\n        }\r\n        \r\n        .custom-popup {\r\n          font-family: system-ui, -apple-system, sans-serif;\r\n        }\r\n        \r\n        .leaflet-control-layers {\r\n          border-radius: 8px !important;\r\n          box-shadow: 0 4px 12px rgba(0,0,0,0.15) !important;\r\n        }\r\n        \r\n        .leaflet-control-layers-toggle {\r\n          background: white !important;\r\n          border-radius: 8px !important;\r\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1) !important;\r\n        }\r\n        \r\n        .leaflet-control-zoom a {\r\n          background: white !important;\r\n          border-radius: 6px !important;\r\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1) !important;\r\n          color: #374151 !important;\r\n          font-weight: 600 !important;\r\n        }\r\n        \r\n        .leaflet-control-zoom a:hover {\r\n          background: #f9fafb !important;\r\n          color: #111827 !important;\r\n        }\r\n      `}</style>\r\n      \r\n      <div className=\"container py-4\">\r\n        {/* Header */}\r\n        <div className=\"mb-6\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">üçΩÔ∏è Food Discovery Map</h1>\r\n          <p className=\"text-gray-600\">Find the best restaurants, cafes, and food places in the Philippines</p>\r\n          <div className=\"mt-2 p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n            <p className=\"text-sm text-green-700\">\r\n              <strong>Real Data Mode:</strong> Now showing real restaurants and cafes from OpenStreetMap! Use \"My Location\" to center the map, then click \"Search Food Places\" to find restaurants in the current view area.\r\n            </p>\r\n          </div>\r\n          <div className=\"mt-2 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n            <p className=\"text-sm text-blue-700\">\r\n              <strong>üó∫Ô∏è Click to Explore:</strong> Click anywhere on the map to automatically find and display nearby restaurants and cafes! The map will refresh with new places from the Places API around your clicked location.\r\n            </p>\r\n          </div>\r\n          <div className=\"mt-2 p-3 bg-purple-50 border border-purple-200 rounded-lg\">\r\n            <p className=\"text-sm text-purple-700\">\r\n              <strong>üîç Smart Zoom Filtering:</strong> \r\n              <br />‚Ä¢ <strong>Zoomed Out (‚â§12):</strong> Shows max 10 well-known chains and highly-rated places (4.2+ stars)\r\n              <br />‚Ä¢ <strong>Medium Zoom (13-15):</strong> Shows max 20 places with 3.8+ star ratings\r\n              <br />‚Ä¢ <strong>Zoomed In (16+):</strong> Shows all available food places (no limit)\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search and Filters */}\r\n        <div className=\"mb-4 bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\r\n          <div className=\"flex flex-col lg:flex-row gap-4\">\r\n            {/* Search Bar */}\r\n            <form onSubmit={geocodeSearch} className=\"relative flex-1\">\r\n              <div className=\"relative\">\r\n            <input\r\n              value={query}\r\n              onChange={(e) => onQueryChange(e.target.value)}\r\n              onFocus={() => suggestions.length && setShowSuggestions(true)}\r\n                  placeholder=\"Search for restaurants, cafes, or food places...\"\r\n                  className=\"h-12 w-full px-4 pr-12 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#8c52ff] focus:border-transparent outline-none\"\r\n                />\r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"absolute right-2 top-1/2 -translate-y-1/2 h-8 px-4 rounded-md bg-[#8c52ff] text-white text-sm hover:opacity-90\"\r\n                >\r\n                  {searching ? \"...\" : \"Search\"}\r\n                </button>\r\n              </div>\r\n            {showSuggestions && suggestions.length > 0 && (\r\n                <div className=\"absolute top-14 left-0 right-0 z-20 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-y-auto\">\r\n                {suggestions.map((s, i) => (\r\n                  <button\r\n                    type=\"button\"\r\n                    key={`${s.lat}-${s.lon}-${i}`}\r\n                    onClick={() => {\r\n                        const latlng: [number, number] = [s.lat, s.lon];\r\n                        mapRef.current.setView(latlng, 15);\r\n                        searchFoodPlaces(latlng);\r\n                      setShowSuggestions(false);\r\n                    }}\r\n                      className=\"block w-full text-left px-4 py-3 hover:bg-gray-50 text-sm border-b border-gray-100 last:border-b-0\"\r\n                  >\r\n                    {s.display}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </form>\r\n\r\n            {/* Filters */}\r\n            <div className=\"flex gap-3\">\r\n              <select \r\n                value={categoryFilter} \r\n                onChange={(e) => setCategoryFilter(e.target.value)} \r\n                className=\"h-12 px-4 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#8c52ff] focus:border-transparent outline-none\"\r\n              >\r\n                <option value=\"\">All Categories</option>\r\n                <option value=\"Cafes\">Cafes</option>\r\n                <option value=\"Bakeries/Pastries\">Bakeries/Pastries</option>\r\n                <option value=\"Bars/Pubs\">Bars/Pubs</option>\r\n                <option value=\"Fine Dining\">Fine Dining</option>\r\n                <option value=\"Fast Foods\">Fast Foods</option>\r\n                <option value=\"Local Cuisine\">Local Cuisine</option>\r\n                <option value=\"International Cuisine\">International Cuisine</option>\r\n              </select>\r\n              \r\n              <select \r\n                value={featureFilter} \r\n                onChange={(e) => setFeatureFilter(e.target.value)} \r\n                className=\"h-12 px-4 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#8c52ff] focus:border-transparent outline-none\"\r\n              >\r\n                <option value=\"\">All Features</option>\r\n                <option value=\"Budget-Friendly\">Budget-Friendly</option>\r\n                <option value=\"Family-Friendly\">Family-Friendly</option>\r\n                <option value=\"Open 24 Hours\">Open 24 Hours</option>\r\n                <option value=\"Pet-Friendly\">Pet-Friendly</option>\r\n            </select>\r\n              \r\n              <button\r\n                onClick={locateUser} \r\n                disabled={loadingLoc} \r\n                className=\"h-12 px-6 rounded-lg bg-gray-100 text-gray-700 hover:bg-gray-200 disabled:opacity-50 flex items-center gap-2\"\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                </svg>\r\n                {loadingLoc ? \"Locating...\" : \"My Location\"}\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  if (mapRef.current) {\r\n                    const center = mapRef.current.getCenter();\r\n                    searchFoodPlaces([center.lat, center.lng]);\r\n                  }\r\n                }}\r\n                disabled={loadingPlaces}\r\n                className=\"h-12 px-6 rounded-lg bg-green-600 text-white hover:bg-green-700 disabled:opacity-50 flex items-center gap-2\"\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                </svg>\r\n                {loadingPlaces ? \"Searching...\" : \"Search Food Places\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Map Container */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n          <div ref={mapEl} style={{ width: \"100%\", height: \"70vh\" }} />\r\n        </div>\r\n\r\n        {/* Food Places List */}\r\n        <div className=\"mt-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">\r\n              üç¥ Food Places {loadingPlaces ? \"(loading...)\" : `(${filteredPlaces.length} of ${foodPlaces.length})`}\r\n            </h2>\r\n            <div className=\"flex items-center gap-4 text-sm text-gray-500\">\r\n              {userLocation && (\r\n                <p>üìç Showing places near your location</p>\r\n              )}\r\n              <div className=\"flex items-center gap-2\">\r\n                <span>üîç Zoom Level: {currentZoom}</span>\r\n                {currentZoom <= 12 && (\r\n                  <span className=\"bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full text-xs\">\r\n                    Well-known places only\r\n                  </span>\r\n                )}\r\n                {currentZoom > 12 && currentZoom <= 15 && (\r\n                  <span className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs\">\r\n                    Highly rated places\r\n                  </span>\r\n                )}\r\n                {currentZoom > 15 && (\r\n                  <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs\">\r\n                    All places\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {filteredPlaces.length === 0 && !loadingPlaces && (\r\n            <div className=\"text-center py-12 bg-white rounded-lg border border-gray-200\">\r\n              <div className=\"text-6xl mb-4\">üçΩÔ∏è</div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No food places found</h3>\r\n              <p className=\"text-gray-600\">Try searching for a different area or adjust your filters</p>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {filteredPlaces.map((place) => (\r\n              <div \r\n                key={place.id} \r\n                className={`bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow cursor-pointer ${\r\n                  selectedPlace?.id === place.id ? 'ring-2 ring-[#8c52ff]' : ''\r\n                }`}\r\n                onClick={() => setSelectedPlace(place)}\r\n              >\r\n                <div className=\"flex items-start justify-between mb-2\">\r\n                  <h3 className=\"font-semibold text-gray-900 text-lg\">{place.name}</h3>\r\n                  {place.rating && (\r\n                    <div className=\"flex items-center gap-1 text-yellow-500\">\r\n                      <span className=\"text-sm\">‚≠ê</span>\r\n                      <span className=\"text-sm font-medium\">{place.rating.toFixed(1)}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <p className=\"text-gray-600 text-sm mb-2\">{place.category}</p>\r\n                \r\n                {place.cuisine_type && (\r\n                  <p className=\"text-gray-500 text-xs mb-2\">{place.cuisine_type}</p>\r\n                )}\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                  {place.price_range && (\r\n                    <span className=\"text-green-600 font-medium text-sm\">{place.price_range}</span>\r\n                  )}\r\n                  <button \r\n                    className=\"text-[#8c52ff] text-sm font-medium hover:underline\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      // Center map on this place\r\n                      mapRef.current.setView([place.latitude, place.longitude], 16);\r\n                    }}\r\n                  >\r\n                    View on Map\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Nearby Places Section - Shows when clicking on map */}\r\n        {showNearbyPlaces && clickedLocation && (\r\n          <div className=\"mt-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900\">\r\n                üó∫Ô∏è Food Places Near Clicked Location\r\n                {loadingPlaces && <span className=\"text-sm text-gray-500 ml-2\">(Loading...)</span>}\r\n              </h2>\r\n              <button\r\n                onClick={() => {\r\n                  setShowNearbyPlaces(false);\r\n                  setNearbyPlaces([]);\r\n                  setClickedLocation(null);\r\n                  // Remove ALL click markers\r\n                  if (mapRef.current) {\r\n                    clickMarkersRef.current.forEach(marker => {\r\n                      try {\r\n                        mapRef.current.removeLayer(marker);\r\n                      } catch (error) {\r\n                        console.warn('Error removing click marker:', error);\r\n                      }\r\n                    });\r\n                    clickMarkersRef.current = [];\r\n                    setClickMarker(null);\r\n                  }\r\n                }}\r\n                className=\"text-sm text-gray-500 hover:text-gray-700 flex items-center gap-1\"\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n                Close\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\r\n              <p className=\"text-sm text-blue-700\">\r\n                <strong>üìç Clicked Location:</strong> {clickedLocation[0].toFixed(6)}, {clickedLocation[1].toFixed(6)}\r\n              </p>\r\n              <p className=\"text-xs text-blue-600 mt-1\">\r\n                {loadingPlaces ? (\r\n                  \"Fetching nearby places from Places API...\"\r\n                ) : (\r\n                  `Showing ${nearbyPlaces.length} food places within 1km radius ‚Ä¢ Places automatically fetched from Places API`\r\n                )}\r\n              </p>\r\n            </div>\r\n            \r\n            {loadingPlaces ? (\r\n              <div className=\"text-center py-12 bg-white rounded-lg border border-gray-200\">\r\n                <div className=\"text-4xl mb-4\">üîç</div>\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Finding nearby places...</h3>\r\n                <p className=\"text-gray-600\">Searching for restaurants and cafes around the clicked location</p>\r\n                <div className=\"mt-4 flex justify-center\">\r\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n                </div>\r\n              </div>\r\n            ) : nearbyPlaces.length > 0 ? (\r\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {nearbyPlaces.map((place) => (\r\n                <div \r\n                  key={place.id} \r\n                  className=\"bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow cursor-pointer\"\r\n                  onClick={() => {\r\n                    // Center map on this nearby place and select it\r\n                    mapRef.current.setView([place.latitude, place.longitude], 16);\r\n                    setSelectedPlace(place);\r\n                    setShowNearbyPlaces(false); // Hide nearby places when selecting a specific place\r\n                  }}\r\n                >\r\n                  <div className=\"flex items-start justify-between mb-2\">\r\n                    <h3 className=\"font-semibold text-gray-900 text-lg\">{place.name}</h3>\r\n                    <div className=\"text-right\">\r\n                      {place.rating && (\r\n                        <div className=\"flex items-center gap-1 text-yellow-500 mb-1\">\r\n                          <span className=\"text-sm\">‚≠ê</span>\r\n                          <span className=\"text-sm font-medium\">{place.rating.toFixed(1)}</span>\r\n                        </div>\r\n                      )}\r\n                      {place.distance && (\r\n                        <div className=\"text-xs text-gray-500\">\r\n                          üìè {(place.distance * 1000).toFixed(0)}m away\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <p className=\"text-gray-600 text-sm mb-2\">{place.category}</p>\r\n                  \r\n                  {place.cuisine_type && (\r\n                    <p className=\"text-gray-500 text-xs mb-2\">{place.cuisine_type}</p>\r\n                  )}\r\n                  \r\n                  <div className=\"flex items-center justify-between\">\r\n                    {place.price_range && (\r\n                      <span className=\"text-green-600 font-medium text-sm\">{place.price_range}</span>\r\n                    )}\r\n                    <button \r\n                      className=\"text-[#8c52ff] text-sm font-medium hover:underline\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        // Center map on this place and select it\r\n                        mapRef.current.setView([place.latitude, place.longitude], 16);\r\n                        setSelectedPlace(place);\r\n                        setShowNearbyPlaces(false);\r\n                      }}\r\n                    >\r\n                      View on Map\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-12 bg-white rounded-lg border border-gray-200\">\r\n                <div className=\"text-6xl mb-4\">üó∫Ô∏è</div>\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No food places found nearby</h3>\r\n                <p className=\"text-gray-600\">No food places found within 1km of the clicked location</p>\r\n                <p className=\"text-sm text-gray-500 mt-2\">\r\n                  Try clicking on a different area or use the \"Search Food Places\" button to load more places\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}