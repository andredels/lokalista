{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/lokalista/app/map/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState, useMemo } from \"react\";\nimport { createClient } from \"@/lib/supabase/browserClient\";\n\ninterface FoodPlace {\n  id: string;\n  name: string;\n  category: string;\n  rating: number;\n  price_range: string;\n  latitude: number;\n  longitude: number;\n  description: string;\n  image_url?: string;\n  cuisine_type?: string;\n  is_open?: boolean;\n  features?: string[];\n  distance?: number; // Distance in kilometers from clicked location\n}\n\nexport default function FoodMapPage() {\n  const mapEl = useRef<HTMLDivElement | null>(null);\n  const mapRef = useRef<any>(null);\n  const userMarkerRef = useRef<any>(null);\n  const foodMarkersRef = useRef<any[]>([]);\n  const initializingRef = useRef<boolean>(false);\n  const [query, setQuery] = useState(\"\");\n  const [categoryFilter, setCategoryFilter] = useState(\"\");\n  const [featureFilter, setFeatureFilter] = useState(\"\");\n  const [loadingLoc, setLoadingLoc] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [suggestions, setSuggestions] = useState<Array<{ display: string; lat: number; lon: number }>>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const debounceRef = useRef<any>(null);\n  const [foodPlaces, setFoodPlaces] = useState<FoodPlace[]>([]);\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\n  const [userLocation, setUserLocation] = useState<[number, number] | null>(null);\n  const [selectedPlace, setSelectedPlace] = useState<FoodPlace | null>(null);\n  const [nearbyPlaces, setNearbyPlaces] = useState<FoodPlace[]>([]);\n  const [clickedLocation, setClickedLocation] = useState<[number, number] | null>(null);\n  const [showNearbyPlaces, setShowNearbyPlaces] = useState(false);\n  const [clickMarker, setClickMarker] = useState<any>(null);\n\n  // Initialize Leaflet map with satellite view focused on food places\n  useEffect(() => {\n    const ensureAssets = async () => {\n      if (!document.querySelector('link[data-leaflet-css=\"true\"]')) {\n        const link = document.createElement(\"link\");\n        link.rel = \"stylesheet\";\n        link.href = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\";\n        link.setAttribute(\"data-leaflet-css\", \"true\");\n        document.head.appendChild(link);\n      }\n      if (!(window as any).L) {\n        await new Promise<void>((resolve) => {\n          const script = document.createElement(\"script\");\n          script.src = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\";\n          script.async = true;\n          script.onload = () => resolve();\n          document.body.appendChild(script);\n        });\n      }\n    };\n\n    const init = async () => {\n      if (initializingRef.current || mapRef.current) return;\n      initializingRef.current = true;\n      await ensureAssets();\n      const L = (window as any).L;\n      if (!mapEl.current) return;\n\n      // Default to Cebu City center (similar to your reference image)\n      const defaultCenter: [number, number] = [10.3157, 123.8854];\n      mapRef.current = L.map(mapEl.current, {\n        center: defaultCenter,\n        zoom: 14,\n        zoomControl: true,\n        zoomControlOptions: {\n          position: 'topleft'\n        },\n        // Modern map settings for better performance\n        preferCanvas: true,\n        zoomSnap: 0.25,\n        zoomDelta: 0.5,\n        wheelPxPerZoomLevel: 120,\n        // Enable smooth zooming\n        zoomAnimation: true,\n        fadeAnimation: true,\n        markerZoomAnimation: true,\n        // Modern attribution control\n        attributionControl: true,\n        attributionControlOptions: {\n          position: 'bottomright'\n        }\n      });\n\n      // Modern high-resolution satellite imagery with latest data\n      L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\n        maxZoom: 22,\n        attribution: '&copy; Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\n        subdomains: ['server', 'services'],\n      }).addTo(mapRef.current);\n\n      // Latest street overlay with high detail\n      L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\", {\n        maxZoom: 22,\n        attribution: '&copy; Esri',\n        opacity: 0.7,\n        subdomains: ['server', 'services'],\n      }).addTo(mapRef.current);\n\n      // Add modern OpenStreetMap layer as alternative (latest data)\n      const osmLayer = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 19,\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        subdomains: ['a', 'b', 'c'],\n      });\n\n      // Add layer control for switching between map types\n      const baseMaps = {\n        \"Satellite\": L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\n          maxZoom: 22,\n          attribution: '&copy; Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\n          subdomains: ['server', 'services'],\n        }),\n        \"Street Map\": L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 19,\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n          subdomains: ['a', 'b', 'c'],\n        }),\n        \"Hybrid\": L.layerGroup([\n          L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\n            maxZoom: 22,\n            attribution: '&copy; Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\n            subdomains: ['server', 'services'],\n          }),\n          L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\", {\n            maxZoom: 22,\n            attribution: '&copy; Esri',\n            opacity: 0.7,\n            subdomains: ['server', 'services'],\n          })\n        ])\n      };\n\n      // Add layer control to map\n      L.control.layers(baseMaps, {}, {\n        position: 'topright',\n        collapsed: true\n      }).addTo(mapRef.current);\n\n      // Ask for geolocation and center\n      locateUser();\n\n      // Click anywhere on map to show nearby places\n      mapRef.current.on(\"click\", async (e: any) => {\n        const latlng = e.latlng;\n        const clickedLatLng: [number, number] = [latlng.lat, latlng.lng];\n        console.log('Map clicked at:', clickedLatLng);\n        \n        // Remove previous click marker if it exists\n        if (clickMarker) {\n          mapRef.current.removeLayer(clickMarker);\n        }\n        \n        // Add a visual marker for the clicked location\n        const L = (window as any).L;\n        const clickIcon = L.divIcon({\n          html: '<div style=\"background:#ef4444;color:#fff;border-radius:9999px;padding:8px 12px;box-shadow:0 2px 6px rgba(0,0,0,.25);font-weight:bold;font-size:12px\">üìç Clicked</div>',\n          className: '', iconSize: [60, 28], iconAnchor: [30, 14]\n        });\n        \n        const newClickMarker = L.marker(clickedLatLng, { icon: clickIcon });\n        newClickMarker.addTo(mapRef.current);\n        newClickMarker.bindPopup(`Clicked location<br>${clickedLatLng[0].toFixed(6)}, ${clickedLatLng[1].toFixed(6)}`).openPopup();\n        \n        setClickMarker(newClickMarker);\n        \n        // Set loading state for nearby places\n        setLoadingPlaces(true);\n        setClickedLocation(clickedLatLng);\n        setShowNearbyPlaces(true);\n        setSelectedPlace(null); // Clear any selected place\n        \n        try {\n          // Fetch new places around the clicked location using Places API\n          console.log('Fetching new places for clicked location...');\n          const newPlaces = await fetchRealFoodPlaces(clickedLatLng);\n          console.log('Found', newPlaces.length, 'new places for clicked location');\n          \n          // Update the main food places state with the new places\n          setFoodPlaces(newPlaces);\n          \n          // Clear existing markers and plot the new markers on the map\n          plotFoodMarkers([]); // Clear existing markers first\n          setTimeout(() => {\n            plotFoodMarkers(newPlaces);\n          }, 100);\n          \n          // Find nearby places around the clicked location from the newly fetched places\n          const nearby = findNearbyPlaces(clickedLatLng, newPlaces, 1); // 1km radius\n          console.log('Found nearby places from new data:', nearby.length);\n          setNearbyPlaces(nearby);\n          \n        } catch (error) {\n          console.error(\"Error fetching places for clicked location:\", error);\n          // Fallback: find nearby places from existing foodPlaces\n          const nearby = findNearbyPlaces(clickedLatLng, foodPlaces, 1);\n          console.log('Using fallback nearby places:', nearby.length);\n          setNearbyPlaces(nearby);\n        } finally {\n          setLoadingPlaces(false);\n        }\n      });\n\n      // Load initial food places around default center\n      setTimeout(() => {\n        searchFoodPlaces(defaultCenter);\n      }, 1000);\n\n      initializingRef.current = false;\n    };\n\n    init();\n\n    return () => {\n      if (mapRef.current) {\n        // Clean up click marker\n        if (clickMarker) {\n          mapRef.current.removeLayer(clickMarker);\n        }\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n    };\n  }, []);\n\n  async function locateUser() {\n    if (!mapRef.current) return;\n    if (!(\"geolocation\" in navigator)) return;\n    try {\n      setLoadingLoc(true);\n      const pos = await new Promise<GeolocationPosition>((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 15000,\n          maximumAge: 10000,\n        });\n      });\n      const latlng: [number, number] = [pos.coords.latitude, pos.coords.longitude];\n      setUserLocation(latlng);\n      \n      const L = (window as any).L;\n      if (userMarkerRef.current) {\n        userMarkerRef.current.setLatLng(latlng);\n      } else {\n        const youIcon = L.divIcon({\n          html: '<div style=\"background:#ef4444;color:#fff;border-radius:9999px;padding:6px 10px;box-shadow:0 2px 6px rgba(0,0,0,.25);font-weight:bold\">üìç You</div>',\n          className: '', iconSize: [50, 24], iconAnchor: [25, 12]\n        });\n        userMarkerRef.current = L.marker(latlng, { icon: youIcon });\n        userMarkerRef.current.addTo(mapRef.current);\n      }\n      mapRef.current.setView(latlng, 15);\n      userMarkerRef.current.bindPopup(\"You are here\").openPopup();\n      \n      // Don't auto-search - let user click \"Search Food Places\" button instead\n    } catch (_) {\n      // ignore; user may deny permission\n    } finally {\n      setLoadingLoc(false);\n    }\n  }\n\n  // Fixed sample food places data for demonstration (Cebu City area)\n  const getSampleFoodPlaces = (centerLatLng: [number, number]) => {\n    // Use fixed coordinates around Cebu City instead of relative to click\n    const samplePlaces: FoodPlace[] = [\n      {\n        id: \"1\",\n        name: \"Jollibee\",\n        category: \"Fast Foods\",\n        rating: 4.2,\n        price_range: \"$$\",\n        latitude: 10.3157,\n        longitude: 123.8854,\n        description: \"Popular Filipino fast food chain\",\n        cuisine_type: \"Local Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\n      },\n      {\n        id: \"2\",\n        name: \"McDonald's\",\n        category: \"Fast Foods\",\n        rating: 4.0,\n        price_range: \"$$\",\n        latitude: 10.3167,\n        longitude: 123.8864,\n        description: \"International fast food chain\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\", \"Open 24 Hours\"]\n      },\n      {\n        id: \"3\",\n        name: \"Starbucks Coffee\",\n        category: \"Cafes\",\n        rating: 4.3,\n        price_range: \"$$$\",\n        latitude: 10.3147,\n        longitude: 123.8844,\n        description: \"Premium coffee and pastries\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Pet-Friendly\"]\n      },\n      {\n        id: \"4\",\n        name: \"Chowking\",\n        category: \"Local Cuisine\",\n        rating: 4.1,\n        price_range: \"$$\",\n        latitude: 10.3177,\n        longitude: 123.8874,\n        description: \"Chinese-Filipino cuisine\",\n        cuisine_type: \"Local Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\n      },\n      {\n        id: \"5\",\n        name: \"KFC\",\n        category: \"Fast Foods\",\n        rating: 4.0,\n        price_range: \"$$\",\n        latitude: 10.3137,\n        longitude: 123.8834,\n        description: \"Fried chicken and sides\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\n      },\n      {\n        id: \"6\",\n        name: \"Greenwich Pizza\",\n        category: \"Fast Foods\",\n        rating: 3.9,\n        price_range: \"$$\",\n        latitude: 10.3187,\n        longitude: 123.8884,\n        description: \"Pizza and pasta\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\n      },\n      {\n        id: \"7\",\n        name: \"Mang Inasal\",\n        category: \"Local Cuisine\",\n        rating: 4.4,\n        price_range: \"$$\",\n        latitude: 10.3127,\n        longitude: 123.8824,\n        description: \"Grilled chicken and Filipino dishes\",\n        cuisine_type: \"Local Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\n      },\n      {\n        id: \"8\",\n        name: \"Coffee Bean & Tea Leaf\",\n        category: \"Cafes\",\n        rating: 4.2,\n        price_range: \"$$$\",\n        latitude: 10.3197,\n        longitude: 123.8894,\n        description: \"Coffee, tea, and light meals\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Pet-Friendly\"]\n      },\n      {\n        id: \"9\",\n        name: \"Pizza Hut\",\n        category: \"Fine Dining\",\n        rating: 4.1,\n        price_range: \"$$$\",\n        latitude: 10.3117,\n        longitude: 123.8814,\n        description: \"Pizza, pasta, and wings\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Family-Friendly\"]\n      },\n      {\n        id: \"10\",\n        name: \"Subway\",\n        category: \"Fast Foods\",\n        rating: 4.0,\n        price_range: \"$$\",\n        latitude: 10.3207,\n        longitude: 123.8904,\n        description: \"Fresh sandwiches and salads\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\n      },\n      {\n        id: \"11\",\n        name: \"Goldilocks\",\n        category: \"Bakeries/Pastries\",\n        rating: 4.3,\n        price_range: \"$$\",\n        latitude: 10.3107,\n        longitude: 123.8804,\n        description: \"Filipino bakery and cakes\",\n        cuisine_type: \"Local Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\n      },\n      {\n        id: \"12\",\n        name: \"Red Ribbon\",\n        category: \"Bakeries/Pastries\",\n        rating: 4.1,\n        price_range: \"$$\",\n        latitude: 10.3217,\n        longitude: 123.8914,\n        description: \"Cakes and pastries\",\n        cuisine_type: \"Local Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\n      },\n      {\n        id: \"13\",\n        name: \"Yellow Cab Pizza\",\n        category: \"Fine Dining\",\n        rating: 4.2,\n        price_range: \"$$$\",\n        latitude: 10.3097,\n        longitude: 123.8794,\n        description: \"New York style pizza\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Family-Friendly\"]\n      },\n      {\n        id: \"14\",\n        name: \"Tokyo Tokyo\",\n        category: \"Fast Foods\",\n        rating: 4.0,\n        price_range: \"$$\",\n        latitude: 10.3227,\n        longitude: 123.8924,\n        description: \"Japanese fast food\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Budget-Friendly\", \"Family-Friendly\"]\n      },\n      {\n        id: \"15\",\n        name: \"Bonchon\",\n        category: \"Fine Dining\",\n        rating: 4.4,\n        price_range: \"$$$\",\n        latitude: 10.3087,\n        longitude: 123.8784,\n        description: \"Korean fried chicken\",\n        cuisine_type: \"International Cuisine\",\n        is_open: true,\n        features: [\"Family-Friendly\"]\n      }\n    ];\n\n    // Filter by category if selected\n    let filtered = samplePlaces;\n    if (categoryFilter) {\n      filtered = filtered.filter(place => \n        place.category === categoryFilter\n      );\n    }\n\n    // Filter by features if selected\n    if (featureFilter) {\n      filtered = filtered.filter(place => \n        place.features?.includes(featureFilter)\n      );\n    }\n\n    return filtered;\n  };\n\n  async function searchFoodPlaces(centerLatLng: [number, number]) {\n    setLoadingPlaces(true);\n    try {\n      console.log(\"Searching for real food places at:\", centerLatLng);\n      \n      // Use OpenStreetMap Overpass API for real restaurant data\n      const places = await fetchRealFoodPlaces(centerLatLng);\n      \n      console.log(\"Found\", places.length, \"real places\");\n      setFoodPlaces(places);\n      \n      // Wait a bit to ensure map is ready\n      setTimeout(() => {\n        plotFoodMarkers(places);\n      }, 100);\n      \n    } catch (error) {\n      console.error(\"Error fetching food places:\", error);\n      // Fallback to sample data if real data fails\n      console.log(\"Falling back to sample data\");\n      const places = getSampleFoodPlaces(centerLatLng);\n      setFoodPlaces(places);\n      setTimeout(() => {\n        plotFoodMarkers(places);\n      }, 100);\n    } finally {\n      setLoadingPlaces(false);\n    }\n  }\n\n  // Load initial food places only once\n  const loadInitialFoodPlaces = useMemo(() => {\n    return () => {\n      searchFoodPlaces(defaultCenter);\n    };\n  }, []);\n\n  async function fetchRealFoodPlaces(centerLatLng: [number, number]) {\n    const [lat, lon] = centerLatLng;\n    const radius = 1000; // 1km radius\n    \n    // OpenStreetMap Overpass API query for restaurants, cafes, and fast food\n    const query = `\n[out:json][timeout:25];\n(\n  node[\"amenity\"=\"restaurant\"](around:${radius},${lat},${lon});\n  node[\"amenity\"=\"cafe\"](around:${radius},${lat},${lon});\n  node[\"amenity\"=\"fast_food\"](around:${radius},${lat},${lon});\n  node[\"amenity\"=\"bar\"](around:${radius},${lat},${lon});\n  node[\"amenity\"=\"pub\"](around:${radius},${lat},${lon});\n  node[\"amenity\"=\"food_court\"](around:${radius},${lat},${lon});\n  node[\"shop\"=\"bakery\"](around:${radius},${lat},${lon});\n  node[\"shop\"=\"confectionery\"](around:${radius},${lat},${lon});\n);\nout;\n`;\n\n    const response = await fetch('https://overpass-api.de/api/interpreter', {\n      method: 'POST',\n      body: query,\n      headers: {\n        'Content-Type': 'text/plain',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    // Transform OpenStreetMap data to our format\n    const places: FoodPlace[] = data.elements.map((element: any, index: number) => {\n      const tags = element.tags || {};\n      \n      // Determine category and cuisine type\n      let category = 'Restaurant';\n      let cuisineType = 'International';\n      \n      if (tags.amenity === 'cafe') {\n        category = 'Cafe';\n        cuisineType = 'Coffee';\n      } else if (tags.amenity === 'fast_food') {\n        category = 'Fast Food';\n        cuisineType = 'Fast Food';\n      } else if (tags.amenity === 'bar' || tags.amenity === 'pub') {\n        category = 'Bar';\n        cuisineType = 'International';\n      } else if (tags.shop === 'bakery') {\n        category = 'Bakery';\n        cuisineType = 'Bakery';\n      }\n      \n      // Determine cuisine type from tags\n      if (tags.cuisine) {\n        cuisineType = tags.cuisine;\n      } else if (tags.brand) {\n        const brand = tags.brand.toLowerCase();\n        if (brand.includes('jollibee') || brand.includes('chowking') || brand.includes('mang inasal')) {\n          cuisineType = 'Filipino';\n        } else if (brand.includes('mcdonalds') || brand.includes('kfc') || brand.includes('subway')) {\n          cuisineType = 'American';\n        } else if (brand.includes('starbucks') || brand.includes('coffee bean')) {\n          cuisineType = 'Coffee';\n        }\n      }\n      \n      // Generate random rating (since OSM doesn't have ratings)\n      const rating = 3.5 + Math.random() * 1.5; // 3.5 to 5.0\n      \n      // Determine price range\n      let priceRange = '$$';\n      if (tags.amenity === 'cafe' && tags.brand && tags.brand.toLowerCase().includes('starbucks')) {\n        priceRange = '$$$';\n      } else if (tags.amenity === 'restaurant' && !tags.amenity === 'fast_food') {\n        priceRange = Math.random() > 0.5 ? '$$$' : '$$';\n      }\n      \n      return {\n        id: `osm_${element.id || index}`,\n        name: tags.name || tags.brand || 'Unnamed Place',\n        category: category,\n        rating: Math.round(rating * 10) / 10,\n        price_range: priceRange,\n        latitude: element.lat,\n        longitude: element.lon,\n        description: tags.description || tags.cuisine || category,\n        cuisine_type: cuisineType,\n        is_open: true\n      };\n    });\n\n    // Filter by category if selected\n    let filtered = places;\n    if (categoryFilter) {\n      filtered = filtered.filter(place => \n        place.category === categoryFilter\n      );\n    }\n\n    // Filter by features if selected\n    if (featureFilter) {\n      filtered = filtered.filter(place => \n        place.features?.includes(featureFilter)\n      );\n    }\n\n    return filtered;\n  }\n\n  function plotFoodMarkers(places: FoodPlace[]) {\n    const L = (window as any).L;\n    \n    // Check if Leaflet is loaded and map is ready\n    if (!L || !mapRef.current) {\n      console.log(\"Leaflet not loaded or map not ready yet\");\n      return;\n    }\n    \n    // Clear existing food markers and custom popups\n    foodMarkersRef.current.forEach(marker => {\n      try { \n        // Call cleanup function if it exists\n        if ((marker as any).cleanup) {\n          (marker as any).cleanup();\n        }\n        marker.remove(); \n      } catch {}\n    });\n    foodMarkersRef.current = [];\n    \n    // Also remove any remaining custom popups\n    const customPopups = document.querySelectorAll('.custom-popup');\n    customPopups.forEach(popup => popup.remove());\n\n    console.log(\"Plotting\", places.length, \"food places\");\n\n    // Add markers for each food place with modern styling\n    places.forEach((place) => {\n      const getCategoryIcon = (category: string) => {\n        const cat = category.toLowerCase();\n        if (cat.includes(\"restaurant\") || cat.includes(\"food\")) return \"üçΩÔ∏è\";\n        if (cat.includes(\"cafe\") || cat.includes(\"coffee\")) return \"‚òï\";\n        if (cat.includes(\"bar\")) return \"üç∫\";\n        if (cat.includes(\"fast\")) return \"üçî\";\n        if (cat.includes(\"pizza\")) return \"üçï\";\n        if (cat.includes(\"bakery\")) return \"ü•ñ\";\n        return \"üç¥\";\n      };\n\n      const getCategoryColor = (category: string) => {\n        const cat = category.toLowerCase();\n        if (cat.includes(\"cafe\") || cat.includes(\"coffee\")) return \"#059669\";\n        if (cat.includes(\"fast\")) return \"#dc2626\";\n        if (cat.includes(\"bar\")) return \"#7c3aed\";\n        if (cat.includes(\"bakery\")) return \"#d97706\";\n        return \"#8c52ff\";\n      };\n\n      const iconHtml = `\n        <div style=\"\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          background: linear-gradient(135deg, ${getCategoryColor(place.category)}, ${getCategoryColor(place.category)}dd);\n          color: #fff;\n          border-radius: 25px;\n          padding: 8px 14px;\n          box-shadow: 0 6px 20px rgba(0,0,0,0.25);\n          font-size: 13px;\n          font-weight: 700;\n          border: 3px solid #fff;\n          cursor: pointer;\n          min-width: 60px;\n          justify-content: center;\n        \">\n          <span style=\"font-size: 16px;\">${getCategoryIcon(place.category)}</span>\n          <span>${place.rating ? place.rating.toFixed(1) : \"‚òÖ\"}</span>\n        </div>\n      `;\n\n      const customIcon = L.divIcon({ \n        html: iconHtml, \n        className: \"modern-food-marker\", \n        iconSize: [80, 35], \n        iconAnchor: [40, 17.5],\n        popupAnchor: [0, -25]\n      });\n\n      const marker = L.marker([place.latitude, place.longitude], { \n        icon: customIcon\n      });\n      \n      // Modern popup with better styling\n      const popupContent = `\n        <div style=\"min-width: 240px; font-family: system-ui, -apple-system, sans-serif; padding: 4px;\">\n          <div style=\"display: flex; align-items: center; gap: 10px; margin-bottom: 10px;\">\n            <span style=\"font-size: 20px;\">${getCategoryIcon(place.category)}</span>\n            <div>\n              <h3 style=\"margin: 0; font-size: 16px; font-weight: 700; color: #111827; line-height: 1.2;\">${place.name}</h3>\n              <p style=\"margin: 2px 0 0 0; font-size: 13px; color: #6b7280; font-weight: 500;\">${place.category}</p>\n            </div>\n          </div>\n          <div style=\"display: flex; align-items: center; gap: 6px; margin-bottom: 10px; flex-wrap: wrap;\">\n            <div style=\"display: flex; align-items: center; gap: 2px; background: #fef3c7; padding: 3px 8px; border-radius: 12px;\">\n              <span style=\"color: #f59e0b; font-size: 12px;\">‚≠ê</span>\n              <span style=\"font-weight: 600; font-size: 12px; color: #92400e;\">${place.rating ? place.rating.toFixed(1) : \"N/A\"}</span>\n            </div>\n            ${place.price_range ? `\n            <div style=\"background: #e0e7ff; padding: 3px 8px; border-radius: 12px;\">\n              <span style=\"color: #3730a3; font-size: 12px; font-weight: 500;\">${place.price_range}</span>\n            </div>\n            ` : ''}\n            ${place.cuisine_type ? `\n            <div style=\"background: #f3f4f6; padding: 3px 8px; border-radius: 12px;\">\n              <span style=\"color: #374151; font-size: 12px; font-weight: 500;\">${place.cuisine_type}</span>\n            </div>\n            ` : ''}\n          </div>\n          ${place.description ? `\n          <p style=\"margin: 0; font-size: 14px; color: #4b5563; line-height: 1.4; margin-bottom: 10px;\">${place.description}</p>\n          ` : ''}\n          <div style=\"padding-top: 8px; border-top: 1px solid #e5e7eb;\">\n            <div style=\"display: flex; align-items: center; gap: 4px; font-size: 11px; color: #9ca3af;\">\n              <span>üìç</span>\n              <span>${place.latitude.toFixed(6)}, ${place.longitude.toFixed(6)}</span>\n            </div>\n          </div>\n        </div>\n      `;\n      \n      // Create a custom popup element that won't interfere with hover detection\n      const popupElement = document.createElement('div');\n      popupElement.innerHTML = popupContent;\n      popupElement.className = 'custom-popup';\n      popupElement.style.cssText = `\n        position: absolute;\n        background: white;\n        border: 1px solid #e5e7eb;\n        border-radius: 12px;\n        box-shadow: 0 10px 25px rgba(0,0,0,0.15);\n        padding: 0;\n        z-index: 1000;\n        pointer-events: none;\n        opacity: 0;\n        transform: translateY(10px);\n        transition: all 0.2s ease;\n        min-width: 240px;\n        max-width: 300px;\n      `;\n      \n      // Add popup to map container\n      if (mapRef.current) {\n        mapRef.current.getContainer().appendChild(popupElement);\n      }\n      \n      // Position popup relative to marker with improved accuracy\n      const updatePopupPosition = () => {\n        if (mapRef.current && popupElement) {\n          try {\n            const markerPoint = mapRef.current.latLngToContainerPoint([place.latitude, place.longitude]);\n            const containerRect = mapRef.current.getContainer().getBoundingClientRect();\n            \n            // Get actual popup dimensions\n            const popupRect = popupElement.getBoundingClientRect();\n            const popupWidth = popupRect.width || 240; // fallback to min-width\n            const popupHeight = popupRect.height || 120; // fallback to estimated height\n            \n            // Calculate position relative to the map container\n            const offsetX = markerPoint.x - (popupWidth / 2);\n            const offsetY = markerPoint.y - popupHeight - 25; // 25px above marker\n            \n            // Ensure popup stays within map bounds with padding\n            const padding = 10;\n            const left = Math.max(padding, Math.min(offsetX, containerRect.width - popupWidth - padding));\n            const top = Math.max(padding, Math.min(offsetY, containerRect.height - popupHeight - padding));\n            \n            // Only update if position actually changed to avoid unnecessary reflows\n            const currentLeft = parseFloat(popupElement.style.left) || 0;\n            const currentTop = parseFloat(popupElement.style.top) || 0;\n            \n            if (Math.abs(currentLeft - left) > 1 || Math.abs(currentTop - top) > 1) {\n              popupElement.style.left = left + 'px';\n              popupElement.style.top = top + 'px';\n            }\n          } catch (error) {\n            console.warn('Error updating popup position:', error);\n          }\n        }\n      };\n      \n      // Add hover effects with custom popup\n      let hoverTimeout: NodeJS.Timeout;\n      let isHovering = false;\n      let isPopupVisible = false;\n      \n      marker.on('mouseover', function() {\n        clearTimeout(hoverTimeout);\n        isHovering = true;\n        if (!isPopupVisible) {\n          updatePopupPosition();\n          popupElement.style.opacity = '1';\n          popupElement.style.transform = 'translateY(0)';\n          isPopupVisible = true;\n        }\n      });\n      \n      marker.on('mouseout', function() {\n        isHovering = false;\n        hoverTimeout = setTimeout(() => {\n          if (!isHovering && isPopupVisible) {\n            popupElement.style.opacity = '0';\n            popupElement.style.transform = 'translateY(10px)';\n            isPopupVisible = false;\n          }\n        }, 150);\n      });\n      \n      // Update popup position on map events with throttling\n      let positionUpdateTimeout: NodeJS.Timeout;\n      const throttledUpdatePosition = () => {\n        clearTimeout(positionUpdateTimeout);\n        positionUpdateTimeout = setTimeout(() => {\n          if (isPopupVisible) {\n            updatePopupPosition();\n          }\n        }, 16); // ~60fps\n      };\n      \n      // Update popup position on map move/zoom\n      if (mapRef.current) {\n        mapRef.current.on('move', throttledUpdatePosition);\n        mapRef.current.on('zoom', throttledUpdatePosition);\n        mapRef.current.on('moveend', updatePopupPosition);\n        mapRef.current.on('zoomend', updatePopupPosition);\n      }\n      \n      marker.on('click', () => setSelectedPlace(place));\n      \n      // Store cleanup function for this marker\n      (marker as any).cleanup = () => {\n        if (popupElement && popupElement.parentNode) {\n          popupElement.parentNode.removeChild(popupElement);\n        }\n        if (mapRef.current) {\n          mapRef.current.off('move', throttledUpdatePosition);\n          mapRef.current.off('zoom', throttledUpdatePosition);\n          mapRef.current.off('moveend', updatePopupPosition);\n          mapRef.current.off('zoomend', updatePopupPosition);\n        }\n      };\n      \n      marker.addTo(mapRef.current);\n      foodMarkersRef.current.push(marker);\n    });\n  }\n\n  async function geocodeSearch(e: React.FormEvent) {\n    e.preventDefault();\n    if (!query.trim()) return;\n    setSearching(true);\n    try {\n      // Restrict to Philippines results where possible\n      const url = `https://nominatim.openstreetmap.org/search?format=json&countrycodes=ph&limit=5&q=${encodeURIComponent(query)}`;\n      const res = await fetch(url, { headers: { \"Accept-Language\": \"en\" } });\n      const data = await res.json();\n      if (data && data.length > 0) {\n        const best = data[0];\n        const lat = parseFloat(best.lat);\n        const lon = parseFloat(best.lon);\n        const latlng: [number, number] = [lat, lon];\n        \n        // Center map on search result\n        mapRef.current.setView(latlng, 15);\n        // Only search for food places when explicitly searching for a location\n        searchFoodPlaces(latlng);\n        \n        setSuggestions(\n          data.map((d: any) => ({ display: d.display_name, lat: parseFloat(d.lat), lon: parseFloat(d.lon) }))\n        );\n        setShowSuggestions(true);\n      } else {\n        setSuggestions([]);\n        setShowSuggestions(false);\n        alert(\"No results found in the Philippines.\");\n      }\n    } finally {\n      setSearching(false);\n    }\n  }\n\n  // Live suggestions with debounce on input change\n  function onQueryChange(v: string) {\n    setQuery(v);\n    if (debounceRef.current) clearTimeout(debounceRef.current);\n    if (!v.trim()) {\n      setSuggestions([]);\n      setShowSuggestions(false);\n      return;\n    }\n    debounceRef.current = setTimeout(async () => {\n      try {\n        const url = `https://nominatim.openstreetmap.org/search?format=json&countrycodes=ph&limit=5&q=${encodeURIComponent(v)}`;\n        const res = await fetch(url, { headers: { \"Accept-Language\": \"en\" } });\n        const data = await res.json();\n        setSuggestions((data || []).map((d: any) => ({ display: d.display_name, lat: parseFloat(d.lat), lon: parseFloat(d.lon) })));\n        setShowSuggestions(true);\n      } catch {\n        // ignore\n      }\n    }, 400);\n  }\n\n\n  // Calculate distance between two points using Haversine formula\n  const calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\n    const R = 6371; // Earth's radius in kilometers\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n      Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c; // Distance in kilometers\n  };\n\n  // Find nearby places within a specified radius from a clicked location\n  const findNearbyPlaces = (clickedLatLng: [number, number], allPlaces: FoodPlace[], radiusKm: number = 1): FoodPlace[] => {\n    const [clickLat, clickLon] = clickedLatLng;\n    \n    return allPlaces\n      .map(place => ({\n        ...place,\n        distance: calculateDistance(\n          clickLat,\n          clickLon,\n          place.latitude,\n          place.longitude\n        )\n      }))\n      .filter(place => place.distance <= radiusKm)\n      .sort((a, b) => a.distance - b.distance) // Sort by distance\n      .slice(0, 15); // Limit to 15 nearby places\n  };\n\n  // Test function to verify sample data works\n  useEffect(() => {\n    console.log(\"Food places state:\", foodPlaces);\n  }, [foodPlaces]);\n\n  // Filter food places when filters change\n  useEffect(() => {\n    if (mapRef.current && foodPlaces.length > 0) {\n      const filteredPlaces = getSampleFoodPlaces([10.3157, 123.8854]);\n      setFoodPlaces(filteredPlaces);\n      plotFoodMarkers(filteredPlaces);\n    }\n  }, [categoryFilter, featureFilter]);\n\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Custom CSS for modern map styling */}\n      <style jsx global>{`\n        .modern-food-marker {\n          transition: box-shadow 0.2s ease !important;\n          position: relative !important;\n        }\n        \n        .modern-food-marker:hover {\n          box-shadow: 0 8px 25px rgba(0,0,0,0.35) !important;\n          transform: none !important;\n        }\n        \n        .leaflet-marker-icon {\n          position: absolute !important;\n        }\n        \n        .leaflet-marker-icon:hover {\n          z-index: 1000 !important;\n        }\n        \n        .custom-popup {\n          font-family: system-ui, -apple-system, sans-serif;\n        }\n        \n        .leaflet-control-layers {\n          border-radius: 8px !important;\n          box-shadow: 0 4px 12px rgba(0,0,0,0.15) !important;\n        }\n        \n        .leaflet-control-layers-toggle {\n          background: white !important;\n          border-radius: 8px !important;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1) !important;\n        }\n        \n        .leaflet-control-zoom a {\n          background: white !important;\n          border-radius: 6px !important;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1) !important;\n          color: #374151 !important;\n          font-weight: 600 !important;\n        }\n        \n        .leaflet-control-zoom a:hover {\n          background: #f9fafb !important;\n          color: #111827 !important;\n        }\n      `}</style>\n      \n      <div className=\"container py-4\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">üçΩÔ∏è Food Discovery Map</h1>\n          <p className=\"text-gray-600\">Find the best restaurants, cafes, and food places in the Philippines</p>\n          <div className=\"mt-2 p-3 bg-green-50 border border-green-200 rounded-lg\">\n            <p className=\"text-sm text-green-700\">\n              <strong>Real Data Mode:</strong> Now showing real restaurants and cafes from OpenStreetMap! Use \"My Location\" to center the map, then click \"Search Food Places\" to find restaurants in the current view area.\n            </p>\n          </div>\n          <div className=\"mt-2 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <p className=\"text-sm text-blue-700\">\n              <strong>üó∫Ô∏è Click to Explore:</strong> Click anywhere on the map to automatically find and display nearby restaurants and cafes! The map will refresh with new places from the Places API around your clicked location.\n            </p>\n          </div>\n        </div>\n\n        {/* Search and Filters */}\n        <div className=\"mb-4 bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n          <div className=\"flex flex-col lg:flex-row gap-4\">\n            {/* Search Bar */}\n            <form onSubmit={geocodeSearch} className=\"relative flex-1\">\n              <div className=\"relative\">\n            <input\n              value={query}\n              onChange={(e) => onQueryChange(e.target.value)}\n              onFocus={() => suggestions.length && setShowSuggestions(true)}\n                  placeholder=\"Search for restaurants, cafes, or food places...\"\n                  className=\"h-12 w-full px-4 pr-12 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#8c52ff] focus:border-transparent outline-none\"\n                />\n                <button \n                  type=\"submit\" \n                  className=\"absolute right-2 top-1/2 -translate-y-1/2 h-8 px-4 rounded-md bg-[#8c52ff] text-white text-sm hover:opacity-90\"\n                >\n                  {searching ? \"...\" : \"Search\"}\n                </button>\n              </div>\n            {showSuggestions && suggestions.length > 0 && (\n                <div className=\"absolute top-14 left-0 right-0 z-20 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-y-auto\">\n                {suggestions.map((s, i) => (\n                  <button\n                    type=\"button\"\n                    key={`${s.lat}-${s.lon}-${i}`}\n                    onClick={() => {\n                        const latlng: [number, number] = [s.lat, s.lon];\n                        mapRef.current.setView(latlng, 15);\n                        searchFoodPlaces(latlng);\n                      setShowSuggestions(false);\n                    }}\n                      className=\"block w-full text-left px-4 py-3 hover:bg-gray-50 text-sm border-b border-gray-100 last:border-b-0\"\n                  >\n                    {s.display}\n                  </button>\n                ))}\n              </div>\n            )}\n          </form>\n\n            {/* Filters */}\n            <div className=\"flex gap-3\">\n              <select \n                value={categoryFilter} \n                onChange={(e) => setCategoryFilter(e.target.value)} \n                className=\"h-12 px-4 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#8c52ff] focus:border-transparent outline-none\"\n              >\n                <option value=\"\">All Categories</option>\n                <option value=\"Cafes\">Cafes</option>\n                <option value=\"Bakeries/Pastries\">Bakeries/Pastries</option>\n                <option value=\"Bars/Pubs\">Bars/Pubs</option>\n                <option value=\"Fine Dining\">Fine Dining</option>\n                <option value=\"Fast Foods\">Fast Foods</option>\n                <option value=\"Local Cuisine\">Local Cuisine</option>\n                <option value=\"International Cuisine\">International Cuisine</option>\n              </select>\n              \n              <select \n                value={featureFilter} \n                onChange={(e) => setFeatureFilter(e.target.value)} \n                className=\"h-12 px-4 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#8c52ff] focus:border-transparent outline-none\"\n              >\n                <option value=\"\">All Features</option>\n                <option value=\"Budget-Friendly\">Budget-Friendly</option>\n                <option value=\"Family-Friendly\">Family-Friendly</option>\n                <option value=\"Open 24 Hours\">Open 24 Hours</option>\n                <option value=\"Pet-Friendly\">Pet-Friendly</option>\n            </select>\n              \n              <button\n                onClick={locateUser} \n                disabled={loadingLoc} \n                className=\"h-12 px-6 rounded-lg bg-gray-100 text-gray-700 hover:bg-gray-200 disabled:opacity-50 flex items-center gap-2\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                {loadingLoc ? \"Locating...\" : \"My Location\"}\n              </button>\n              <button\n                onClick={() => {\n                  if (mapRef.current) {\n                    const center = mapRef.current.getCenter();\n                    searchFoodPlaces([center.lat, center.lng]);\n                  }\n                }}\n                disabled={loadingPlaces}\n                className=\"h-12 px-6 rounded-lg bg-green-600 text-white hover:bg-green-700 disabled:opacity-50 flex items-center gap-2\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n                {loadingPlaces ? \"Searching...\" : \"Search Food Places\"}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Map Container */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n          <div ref={mapEl} style={{ width: \"100%\", height: \"70vh\" }} />\n        </div>\n\n        {/* Food Places List */}\n        <div className=\"mt-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">\n              üç¥ Food Places {loadingPlaces ? \"(loading...)\" : `(${foodPlaces.length})`}\n            </h2>\n            {userLocation && (\n              <p className=\"text-sm text-gray-500\">\n                üìç Showing places near your location\n              </p>\n            )}\n          </div>\n          \n          {foodPlaces.length === 0 && !loadingPlaces && (\n            <div className=\"text-center py-12 bg-white rounded-lg border border-gray-200\">\n              <div className=\"text-6xl mb-4\">üçΩÔ∏è</div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No food places found</h3>\n              <p className=\"text-gray-600\">Try searching for a different area or adjust your filters</p>\n            </div>\n          )}\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {foodPlaces.map((place) => (\n              <div \n                key={place.id} \n                className={`bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow cursor-pointer ${\n                  selectedPlace?.id === place.id ? 'ring-2 ring-[#8c52ff]' : ''\n                }`}\n                onClick={() => setSelectedPlace(place)}\n              >\n                <div className=\"flex items-start justify-between mb-2\">\n                  <h3 className=\"font-semibold text-gray-900 text-lg\">{place.name}</h3>\n                  {place.rating && (\n                    <div className=\"flex items-center gap-1 text-yellow-500\">\n                      <span className=\"text-sm\">‚≠ê</span>\n                      <span className=\"text-sm font-medium\">{place.rating.toFixed(1)}</span>\n                    </div>\n                  )}\n                </div>\n                \n                <p className=\"text-gray-600 text-sm mb-2\">{place.category}</p>\n                \n                {place.cuisine_type && (\n                  <p className=\"text-gray-500 text-xs mb-2\">{place.cuisine_type}</p>\n                )}\n                \n                <div className=\"flex items-center justify-between\">\n                  {place.price_range && (\n                    <span className=\"text-green-600 font-medium text-sm\">{place.price_range}</span>\n                  )}\n                  <button \n                    className=\"text-[#8c52ff] text-sm font-medium hover:underline\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      // Center map on this place\n                      mapRef.current.setView([place.latitude, place.longitude], 16);\n                    }}\n                  >\n                    View on Map\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Nearby Places Section - Shows when clicking on map */}\n        {showNearbyPlaces && clickedLocation && (\n          <div className=\"mt-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">\n                üó∫Ô∏è Food Places Near Clicked Location\n                {loadingPlaces && <span className=\"text-sm text-gray-500 ml-2\">(Loading...)</span>}\n              </h2>\n              <button\n                onClick={() => {\n                  setShowNearbyPlaces(false);\n                  setNearbyPlaces([]);\n                  setClickedLocation(null);\n                  // Remove click marker\n                  if (clickMarker && mapRef.current) {\n                    mapRef.current.removeLayer(clickMarker);\n                    setClickMarker(null);\n                  }\n                }}\n                className=\"text-sm text-gray-500 hover:text-gray-700 flex items-center gap-1\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n                Close\n              </button>\n            </div>\n            \n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\n              <p className=\"text-sm text-blue-700\">\n                <strong>üìç Clicked Location:</strong> {clickedLocation[0].toFixed(6)}, {clickedLocation[1].toFixed(6)}\n              </p>\n              <p className=\"text-xs text-blue-600 mt-1\">\n                {loadingPlaces ? (\n                  \"Fetching nearby places from Places API...\"\n                ) : (\n                  `Showing ${nearbyPlaces.length} food places within 1km radius ‚Ä¢ Places automatically fetched from Places API`\n                )}\n              </p>\n            </div>\n            \n            {loadingPlaces ? (\n              <div className=\"text-center py-12 bg-white rounded-lg border border-gray-200\">\n                <div className=\"text-4xl mb-4\">üîç</div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Finding nearby places...</h3>\n                <p className=\"text-gray-600\">Searching for restaurants and cafes around the clicked location</p>\n                <div className=\"mt-4 flex justify-center\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                </div>\n              </div>\n            ) : nearbyPlaces.length > 0 ? (\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {nearbyPlaces.map((place) => (\n                <div \n                  key={place.id} \n                  className=\"bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow cursor-pointer\"\n                  onClick={() => {\n                    // Center map on this nearby place and select it\n                    mapRef.current.setView([place.latitude, place.longitude], 16);\n                    setSelectedPlace(place);\n                    setShowNearbyPlaces(false); // Hide nearby places when selecting a specific place\n                  }}\n                >\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <h3 className=\"font-semibold text-gray-900 text-lg\">{place.name}</h3>\n                    <div className=\"text-right\">\n                      {place.rating && (\n                        <div className=\"flex items-center gap-1 text-yellow-500 mb-1\">\n                          <span className=\"text-sm\">‚≠ê</span>\n                          <span className=\"text-sm font-medium\">{place.rating.toFixed(1)}</span>\n                        </div>\n                      )}\n                      {place.distance && (\n                        <div className=\"text-xs text-gray-500\">\n                          üìè {(place.distance * 1000).toFixed(0)}m away\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <p className=\"text-gray-600 text-sm mb-2\">{place.category}</p>\n                  \n                  {place.cuisine_type && (\n                    <p className=\"text-gray-500 text-xs mb-2\">{place.cuisine_type}</p>\n                  )}\n                  \n                  <div className=\"flex items-center justify-between\">\n                    {place.price_range && (\n                      <span className=\"text-green-600 font-medium text-sm\">{place.price_range}</span>\n                    )}\n                    <button \n                      className=\"text-[#8c52ff] text-sm font-medium hover:underline\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        // Center map on this place and select it\n                        mapRef.current.setView([place.latitude, place.longitude], 16);\n                        setSelectedPlace(place);\n                        setShowNearbyPlaces(false);\n                      }}\n                    >\n                      View on Map\n                    </button>\n                  </div>\n                </div>\n              ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-12 bg-white rounded-lg border border-gray-200\">\n                <div className=\"text-6xl mb-4\">üó∫Ô∏è</div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No food places found nearby</h3>\n                <p className=\"text-gray-600\">No food places found within 1km of the clicked location</p>\n                <p className=\"text-sm text-gray-500 mt-2\">\n                  Try clicking on a different area or use the \"Search Food Places\" button to load more places\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n\n      </div>\n    </div>\n  );\n}\n\n\n"],"names":[],"mappings":"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","debugId":null}}]
}